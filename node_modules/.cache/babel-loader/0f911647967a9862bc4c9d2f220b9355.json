{"ast":null,"code":"import _classCallCheck from \"C:\\\\xampp\\\\htdocs\\\\api_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\xampp\\\\htdocs\\\\api_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\xampp\\\\htdocs\\\\api_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\xampp\\\\htdocs\\\\api_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\xampp\\\\htdocs\\\\api_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\api_react\\\\src\\\\views\\\\components\\\\reactstrap\\\\examples\\\\tooltips.js\";\nimport React from \"react\";\nimport { Button, Tooltip } from \"reactstrap\";\n\nvar TooltipItem =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(TooltipItem, _React$Component);\n\n  function TooltipItem() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, TooltipItem);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(TooltipItem)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      tooltipOpen: false\n    };\n\n    _this.toggle = function () {\n      _this.setState({\n        tooltipOpen: !_this.state.tooltipOpen\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(TooltipItem, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }, React.createElement(Button, {\n        className: \"mr-1\",\n        color: \"secondary\",\n        id: \"Tooltip-\" + this.props.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }, this.props.item.text), React.createElement(Tooltip, {\n        placement: this.props.item.placement,\n        isOpen: this.state.tooltipOpen,\n        target: \"Tooltip-\" + this.props.id,\n        toggle: this.toggle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, \"Tooltip Content!\"));\n    }\n  }]);\n\n  return TooltipItem;\n}(React.Component);\n\nvar TooltipExampleMulti =\n/*#__PURE__*/\nfunction (_React$Component2) {\n  _inherits(TooltipExampleMulti, _React$Component2);\n\n  function TooltipExampleMulti() {\n    var _getPrototypeOf3;\n\n    var _this2;\n\n    _classCallCheck(this, TooltipExampleMulti);\n\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    _this2 = _possibleConstructorReturn(this, (_getPrototypeOf3 = _getPrototypeOf(TooltipExampleMulti)).call.apply(_getPrototypeOf3, [this].concat(args)));\n    _this2.state = {\n      tooltips: [{\n        placement: \"top\",\n        text: \"Top\"\n      }, {\n        placement: \"bottom\",\n        text: \"Bottom\"\n      }, {\n        placement: \"left\",\n        text: \"Left\"\n      }, {\n        placement: \"right\",\n        text: \"Right\"\n      }]\n    };\n    return _this2;\n  }\n\n  _createClass(TooltipExampleMulti, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, this.state.tooltips.map(function (tooltip, i) {\n        return React.createElement(TooltipItem, {\n          key: i,\n          item: tooltip,\n          id: i,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64\n          },\n          __self: this\n        });\n      }));\n    }\n  }]);\n\n  return TooltipExampleMulti;\n}(React.Component);\n\nexport default TooltipExampleMulti;","map":{"version":3,"sources":["C:/xampp/htdocs/api_react/src/views/components/reactstrap/examples/tooltips.js"],"names":["React","Button","Tooltip","TooltipItem","state","tooltipOpen","toggle","setState","props","id","item","text","placement","Component","TooltipExampleMulti","tooltips","map","tooltip","i"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,OAAjB,QAAgC,YAAhC;;IAEMC,W;;;;;;;;;;;;;;;;;UACHC,K,GAAQ;AACLC,MAAAA,WAAW,EAAE;AADR,K;;UAIRC,M,GAAS,YAAM;AACZ,YAAKC,QAAL,CAAc;AACXF,QAAAA,WAAW,EAAE,CAAC,MAAKD,KAAL,CAAWC;AADd,OAAd;AAGF,K;;;;;;;6BAEQ;AACN,aACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,oBAAC,MAAD;AACG,QAAA,SAAS,EAAC,MADb;AAEG,QAAA,KAAK,EAAC,WAFT;AAGG,QAAA,EAAE,EAAE,aAAa,KAAKG,KAAL,CAAWC,EAH/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKI,KAAKD,KAAL,CAAWE,IAAX,CAAgBC,IALpB,CADH,EAQG,oBAAC,OAAD;AACG,QAAA,SAAS,EAAE,KAAKH,KAAL,CAAWE,IAAX,CAAgBE,SAD9B;AAEG,QAAA,MAAM,EAAE,KAAKR,KAAL,CAAWC,WAFtB;AAGG,QAAA,MAAM,EAAE,aAAa,KAAKG,KAAL,CAAWC,EAHnC;AAIG,QAAA,MAAM,EAAE,KAAKH,MAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BARH,CADH;AAmBF;;;;EA/BsBN,KAAK,CAACa,S;;IAkC1BC,mB;;;;;;;;;;;;;;;;;WACHV,K,GAAQ;AACLW,MAAAA,QAAQ,EAAE,CACP;AACGH,QAAAA,SAAS,EAAE,KADd;AAEGD,QAAAA,IAAI,EAAE;AAFT,OADO,EAKP;AACGC,QAAAA,SAAS,EAAE,QADd;AAEGD,QAAAA,IAAI,EAAE;AAFT,OALO,EASP;AACGC,QAAAA,SAAS,EAAE,MADd;AAEGD,QAAAA,IAAI,EAAE;AAFT,OATO,EAaP;AACGC,QAAAA,SAAS,EAAE,OADd;AAEGD,QAAAA,IAAI,EAAE;AAFT,OAbO;AADL,K;;;;;;6BAqBC;AACN,aACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,KAAKP,KAAL,CAAWW,QAAX,CAAoBC,GAApB,CAAwB,UAACC,OAAD,EAAUC,CAAV,EAAgB;AACtC,eAAO,oBAAC,WAAD;AAAa,UAAA,GAAG,EAAEA,CAAlB;AAAqB,UAAA,IAAI,EAAED,OAA3B;AAAoC,UAAA,EAAE,EAAEC,CAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACF,OAFA,CADJ,CADH;AAOF;;;;EA9B8BlB,KAAK,CAACa,S;;AAiCxC,eAAeC,mBAAf","sourcesContent":["import React from \"react\";\r\nimport { Button, Tooltip } from \"reactstrap\";\r\n\r\nclass TooltipItem extends React.Component {\r\n   state = {\r\n      tooltipOpen: false\r\n   };\r\n\r\n   toggle = () => {\r\n      this.setState({\r\n         tooltipOpen: !this.state.tooltipOpen\r\n      });\r\n   };\r\n\r\n   render() {\r\n      return (\r\n         <span>\r\n            <Button\r\n               className=\"mr-1\"\r\n               color=\"secondary\"\r\n               id={\"Tooltip-\" + this.props.id}\r\n            >\r\n               {this.props.item.text}\r\n            </Button>\r\n            <Tooltip\r\n               placement={this.props.item.placement}\r\n               isOpen={this.state.tooltipOpen}\r\n               target={\"Tooltip-\" + this.props.id}\r\n               toggle={this.toggle}\r\n            >\r\n               Tooltip Content!\r\n            </Tooltip>\r\n         </span>\r\n      );\r\n   }\r\n}\r\n\r\nclass TooltipExampleMulti extends React.Component {\r\n   state = {\r\n      tooltips: [\r\n         {\r\n            placement: \"top\",\r\n            text: \"Top\"\r\n         },\r\n         {\r\n            placement: \"bottom\",\r\n            text: \"Bottom\"\r\n         },\r\n         {\r\n            placement: \"left\",\r\n            text: \"Left\"\r\n         },\r\n         {\r\n            placement: \"right\",\r\n            text: \"Right\"\r\n         }\r\n      ]\r\n   };\r\n\r\n   render() {\r\n      return (\r\n         <div>\r\n            {this.state.tooltips.map((tooltip, i) => {\r\n               return <TooltipItem key={i} item={tooltip} id={i} />;\r\n            })}\r\n         </div>\r\n      );\r\n   }\r\n}\r\n\r\nexport default TooltipExampleMulti;\r\n"]},"metadata":{},"sourceType":"module"}