{"ast":null,"code":"import { connect } from 'react-redux';\nimport emailList from '../../components/email/emailList';\nimport { VisibilityFilters, openEmail as _openEmail, setSelectedEmail as _setSelectedEmail, starEmail, importantEmail } from '../../redux/actions/email/emailActions';\n\nvar getVisibleEmails = function getVisibleEmails(emails, filter, emailSearch) {\n  switch (filter) {\n    case VisibilityFilters.SHOW_INBOX:\n      return emails.filter(function (t) {\n        return t.inbox && !t.trash && t.from.toLocaleLowerCase().includes(emailSearch.toLocaleLowerCase());\n      });\n\n    case VisibilityFilters.SHOW_SENT:\n      return emails.filter(function (t) {\n        return t.sent && !t.trash && t.from.toLocaleLowerCase().includes(emailSearch.toLocaleLowerCase());\n      });\n\n    case VisibilityFilters.SHOW_DRAFTS:\n      return emails.filter(function (t) {\n        return t.draft && !t.trash && t.from.toLocaleLowerCase().includes(emailSearch.toLocaleLowerCase());\n      });\n\n    case VisibilityFilters.SHOW_SPAM:\n      return emails.filter(function (t) {\n        return t.spam && !t.trash && t.from.toLocaleLowerCase().includes(emailSearch.toLocaleLowerCase());\n      });\n\n    case VisibilityFilters.SHOW_TRASH:\n      return emails.filter(function (t) {\n        return t.trash && t.from.toLocaleLowerCase().includes(emailSearch.toLocaleLowerCase());\n      });\n\n    case VisibilityFilters.SHOW_STARRED:\n      return emails.filter(function (t) {\n        return t.starred && !t.trash && t.from.toLocaleLowerCase().includes(emailSearch.toLocaleLowerCase());\n      });\n\n    case VisibilityFilters.SHOW_IMPORTANT:\n      return emails.filter(function (t) {\n        return t.important && !t.trash && t.from.toLocaleLowerCase().includes(emailSearch.toLocaleLowerCase());\n      });\n\n    case VisibilityFilters.SHOW_TECHNOLOGY:\n      return emails.filter(function (t) {\n        return t.label === 'Technology' && !t.trash && t.from.toLocaleLowerCase().includes(emailSearch.toLocaleLowerCase());\n      });\n\n    case VisibilityFilters.SHOW_FINANCE:\n      return emails.filter(function (t) {\n        return t.label === 'Finance' && !t.trash && t.from.toLocaleLowerCase().includes(emailSearch.toLocaleLowerCase());\n      });\n\n    case VisibilityFilters.SHOW_HEALTH:\n      return emails.filter(function (t) {\n        return t.label === 'Health' && !t.trash && t.from.toLocaleLowerCase().includes(emailSearch.toLocaleLowerCase());\n      });\n\n    default:\n      throw new Error('Unknown filter: ' + filter);\n  }\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    emails: getVisibleEmails(state.emailApp.emails, state.emailApp.visibilityFilter, state.emailApp.emailSearch),\n    active: state.emailApp.emailContent\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    openEmail: function openEmail(id) {\n      return dispatch(_openEmail(id));\n    },\n    onStar: function onStar(id) {\n      return dispatch(starEmail(id));\n    },\n    onImportant: function onImportant(id) {\n      return dispatch(importantEmail(id));\n    },\n    setSelectedEmail: function setSelectedEmail(id, checkStatus) {\n      return dispatch(_setSelectedEmail(id, checkStatus));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(emailList);","map":{"version":3,"sources":["C:/xampp/htdocs/api_react/src/containers/email/showEmails.js"],"names":["connect","emailList","VisibilityFilters","openEmail","setSelectedEmail","starEmail","importantEmail","getVisibleEmails","emails","filter","emailSearch","SHOW_INBOX","t","inbox","trash","from","toLocaleLowerCase","includes","SHOW_SENT","sent","SHOW_DRAFTS","draft","SHOW_SPAM","spam","SHOW_TRASH","SHOW_STARRED","starred","SHOW_IMPORTANT","important","SHOW_TECHNOLOGY","label","SHOW_FINANCE","SHOW_HEALTH","Error","mapStateToProps","state","emailApp","visibilityFilter","active","emailContent","mapDispatchToProps","dispatch","id","onStar","onImportant","checkStatus"],"mappings":"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","sourcesContent":["import { connect } from 'react-redux'\r\nimport emailList from '../../components/email/emailList'\r\nimport { VisibilityFilters, openEmail, setSelectedEmail, starEmail, importantEmail } from '../../redux/actions/email/emailActions';\r\n\r\nconst getVisibleEmails = (emails, filter, emailSearch) => {\r\n  switch (filter) {\r\n    case VisibilityFilters.SHOW_INBOX:\r\n      return emails.filter(\r\n        t => t.inbox && \r\n        !t.trash && \r\n        t.from.toLocaleLowerCase().includes(emailSearch.toLocaleLowerCase())\r\n      )\r\n    case VisibilityFilters.SHOW_SENT:\r\n      return emails.filter(\r\n        t => t.sent && \r\n        !t.trash && \r\n        t.from.toLocaleLowerCase().includes(emailSearch.toLocaleLowerCase())\r\n      )\r\n    case VisibilityFilters.SHOW_DRAFTS:\r\n      return emails.filter(\r\n        t => t.draft && \r\n        !t.trash && \r\n        t.from.toLocaleLowerCase().includes(emailSearch.toLocaleLowerCase())\r\n      )\r\n    case VisibilityFilters.SHOW_SPAM:\r\n      return emails.filter(\r\n        t => t.spam && \r\n        !t.trash && \r\n        t.from.toLocaleLowerCase().includes(emailSearch.toLocaleLowerCase())\r\n      )\r\n    case VisibilityFilters.SHOW_TRASH:\r\n      return emails.filter(\r\n        t => t.trash && \r\n        t.from.toLocaleLowerCase().includes(emailSearch.toLocaleLowerCase())\r\n      )\r\n    case VisibilityFilters.SHOW_STARRED:\r\n      return emails.filter(\r\n        t => t.starred && \r\n        !t.trash && \r\n        t.from.toLocaleLowerCase().includes(emailSearch.toLocaleLowerCase())\r\n      )\r\n    case VisibilityFilters.SHOW_IMPORTANT:\r\n      return emails.filter(\r\n        t => t.important && \r\n        !t.trash && \r\n        t.from.toLocaleLowerCase().includes(emailSearch.toLocaleLowerCase())\r\n      )\r\n    case VisibilityFilters.SHOW_TECHNOLOGY:\r\n      return emails.filter(\r\n        t => t.label === 'Technology' && \r\n        !t.trash && \r\n        t.from.toLocaleLowerCase().includes(emailSearch.toLocaleLowerCase())\r\n      )\r\n    case VisibilityFilters.SHOW_FINANCE:\r\n      return emails.filter(\r\n        t => t.label === 'Finance' && \r\n        !t.trash && \r\n        t.from.toLocaleLowerCase().includes(emailSearch.toLocaleLowerCase())\r\n      )\r\n    case VisibilityFilters.SHOW_HEALTH:\r\n      return emails.filter(\r\n        t => t.label === 'Health' && \r\n        !t.trash && \r\n        t.from.toLocaleLowerCase().includes(emailSearch.toLocaleLowerCase())\r\n      )\r\n    default:\r\n      throw new Error('Unknown filter: ' + filter)\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  emails: getVisibleEmails(state.emailApp.emails, state.emailApp.visibilityFilter, state.emailApp.emailSearch),\r\n  active: state.emailApp.emailContent\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  openEmail: id => dispatch(openEmail(id)),\r\n  onStar: id => dispatch(starEmail(id)),\r\n  onImportant: id => dispatch(importantEmail(id)),\r\n  setSelectedEmail: (id, checkStatus) => dispatch(setSelectedEmail(id, checkStatus))\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(emailList)"]},"metadata":{},"sourceType":"module"}