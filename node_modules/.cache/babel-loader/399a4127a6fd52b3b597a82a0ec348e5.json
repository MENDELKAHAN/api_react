{"ast":null,"code":"var ReactTreeTableSource = \"import React from \\\"react\\\";\\n// To create random data\\nimport { makeData } from \\\"../utils\\\";\\nimport _ from \\\"lodash\\\";\\n\\n// Import React Table\\nimport ReactTable from \\\"react-table\\\";\\nimport \\\"react-table/react-table.css\\\";\\n\\n// pull in the HOC\\nimport treeTableHOC from \\\"react-table/lib/hoc/treeTable\\\";\\nimport testData from \\\"../data/test-data\\\";\\n\\n// wrap ReacTable in it\\n// the HOC provides the configuration for the TreeTable\\nconst TreeTable = treeTableHOC(ReactTable);\\n\\nfunction getTdProps(state, ri, ci) {\\n  console.log({ state, ri, ci });\\n  return {};\\n}\\n\\n// getTdProps={getTdProps}\\n// Expander={Expander}\\n\\nexport default class Example extends React.Component {\\n  constructor() {\\n    super();\\n    this.state = {\\n      // data: makeData()\\n      data: testData\\n    };\\n  }\\n  render() {\\n    const { data } = this.state;\\n    // now use the new TreeTable component\\n    return (\\n      <div>\\n        <TreeTable\\n          filterable\\n          defaultFilterMethod={(filter, row, column) => {\\n            const id = filter.pivotId || filter.id;\\n            return row[id] !== undefined\\n              ? String(row[id])\\n                  .toLowerCase()\\n                  .includes(filter.value.toLowerCase())\\n              : true;\\n          }}\\n          data={data}\\n          pivotBy={[\\\"state\\\", \\\"post\\\", \\\"city\\\"]}\\n          columns={[\\n            // we only require the accessor so TreeTable\\n            // can handle the pivot automatically\\n            {\\n              accessor: \\\"state\\\"\\n            },\\n            {\\n              accessor: \\\"post\\\"\\n            },\\n            {\\n              accessor: \\\"city\\\"\\n            },\\n\\n            // any other columns we want to display\\n            {\\n              Header: \\\"First Name\\\",\\n              accessor: \\\"first_name\\\"\\n            },\\n            {\\n              Header: \\\"Last Name\\\",\\n              accessor: \\\"last_name\\\"\\n            },\\n            {\\n              Header: \\\"Company Name\\\",\\n              accessor: \\\"company_name\\\"\\n            },\\n            {\\n              Header: \\\"Address\\\",\\n              accessor: \\\"address\\\"\\n            },\\n            {\\n              Header: \\\"Phone 1\\\",\\n              accessor: \\\"phone1\\\"\\n            },\\n            {\\n              Header: \\\"Email\\\",\\n              accessor: \\\"email\\\"\\n            }\\n          ]}\\n          defaultPageSize={10}\\n          SubComponent={row => {\\n            // a SubComponent just for the final detail\\n            const columns = [\\n              {\\n                Header: \\\"Property\\\",\\n                accessor: \\\"property\\\",\\n                width: 200,\\n                Cell: ci => {\\n                  return `${ci.value}:`;\\n                },\\n                style: {\\n                  backgroundColor: \\\"#DDD\\\",\\n                  textAlign: \\\"right\\\",\\n                  fontWeight: \\\"bold\\\"\\n                }\\n              },\\n              { Header: \\\"Value\\\", accessor: \\\"value\\\" }\\n            ];\\n            const rowData = Object.keys(row.original).map(key => {\\n              return {\\n                property: key,\\n                value: row.original[key].toString()\\n              };\\n            });\\n            return (\\n              <div style={{ padding: \\\"10px\\\" }}>\\n                <ReactTable\\n                  data={rowData}\\n                  columns={columns}\\n                  pageSize={rowData.length}\\n                  showPagination={false}\\n                />\\n              </div>\\n            );\\n          }}\\n        />\\n      </div>\\n    );\\n  }\\n}\";\nexport default ReactTreeTableSource;","map":{"version":3,"sources":["C:/xampp/htdocs/api_react/src/views/tables/example-source/reactTreeTable.js"],"names":["ReactTreeTableSource"],"mappings":"AAAA,IAAMA,oBAAoB,kiHAA1B;AAmIA,eAAeA,oBAAf","sourcesContent":["const ReactTreeTableSource = `import React from \"react\";\r\n// To create random data\r\nimport { makeData } from \"../utils\";\r\nimport _ from \"lodash\";\r\n\r\n// Import React Table\r\nimport ReactTable from \"react-table\";\r\nimport \"react-table/react-table.css\";\r\n\r\n// pull in the HOC\r\nimport treeTableHOC from \"react-table/lib/hoc/treeTable\";\r\nimport testData from \"../data/test-data\";\r\n\r\n// wrap ReacTable in it\r\n// the HOC provides the configuration for the TreeTable\r\nconst TreeTable = treeTableHOC(ReactTable);\r\n\r\nfunction getTdProps(state, ri, ci) {\r\n  console.log({ state, ri, ci });\r\n  return {};\r\n}\r\n\r\n// getTdProps={getTdProps}\r\n// Expander={Expander}\r\n\r\nexport default class Example extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      // data: makeData()\r\n      data: testData\r\n    };\r\n  }\r\n  render() {\r\n    const { data } = this.state;\r\n    // now use the new TreeTable component\r\n    return (\r\n      <div>\r\n        <TreeTable\r\n          filterable\r\n          defaultFilterMethod={(filter, row, column) => {\r\n            const id = filter.pivotId || filter.id;\r\n            return row[id] !== undefined\r\n              ? String(row[id])\r\n                  .toLowerCase()\r\n                  .includes(filter.value.toLowerCase())\r\n              : true;\r\n          }}\r\n          data={data}\r\n          pivotBy={[\"state\", \"post\", \"city\"]}\r\n          columns={[\r\n            // we only require the accessor so TreeTable\r\n            // can handle the pivot automatically\r\n            {\r\n              accessor: \"state\"\r\n            },\r\n            {\r\n              accessor: \"post\"\r\n            },\r\n            {\r\n              accessor: \"city\"\r\n            },\r\n\r\n            // any other columns we want to display\r\n            {\r\n              Header: \"First Name\",\r\n              accessor: \"first_name\"\r\n            },\r\n            {\r\n              Header: \"Last Name\",\r\n              accessor: \"last_name\"\r\n            },\r\n            {\r\n              Header: \"Company Name\",\r\n              accessor: \"company_name\"\r\n            },\r\n            {\r\n              Header: \"Address\",\r\n              accessor: \"address\"\r\n            },\r\n            {\r\n              Header: \"Phone 1\",\r\n              accessor: \"phone1\"\r\n            },\r\n            {\r\n              Header: \"Email\",\r\n              accessor: \"email\"\r\n            }\r\n          ]}\r\n          defaultPageSize={10}\r\n          SubComponent={row => {\r\n            // a SubComponent just for the final detail\r\n            const columns = [\r\n              {\r\n                Header: \"Property\",\r\n                accessor: \"property\",\r\n                width: 200,\r\n                Cell: ci => {\r\n                  return \\`\\${ci.value}:\\`;\r\n                },\r\n                style: {\r\n                  backgroundColor: \"#DDD\",\r\n                  textAlign: \"right\",\r\n                  fontWeight: \"bold\"\r\n                }\r\n              },\r\n              { Header: \"Value\", accessor: \"value\" }\r\n            ];\r\n            const rowData = Object.keys(row.original).map(key => {\r\n              return {\r\n                property: key,\r\n                value: row.original[key].toString()\r\n              };\r\n            });\r\n            return (\r\n              <div style={{ padding: \"10px\" }}>\r\n                <ReactTable\r\n                  data={rowData}\r\n                  columns={columns}\r\n                  pageSize={rowData.length}\r\n                  showPagination={false}\r\n                />\r\n              </div>\r\n            );\r\n          }}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}`;\r\n\r\nexport default ReactTreeTableSource;"]},"metadata":{},"sourceType":"module"}