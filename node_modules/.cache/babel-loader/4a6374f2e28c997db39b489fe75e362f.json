{"ast":null,"code":"import _toConsumableArray from \"C:\\\\xampp\\\\htdocs\\\\api_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"C:\\\\xampp\\\\htdocs\\\\api_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\xampp\\\\htdocs\\\\api_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:\\\\xampp\\\\htdocs\\\\api_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\xampp\\\\htdocs\\\\api_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\xampp\\\\htdocs\\\\api_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\xampp\\\\htdocs\\\\api_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\xampp\\\\htdocs\\\\api_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\api_react\\\\src\\\\app-compoments\\\\role\\\\roles.jsx\";\nimport React, { Fragment } from \"react\";\nimport ContentHeader from \"../../components/contentHead/contentHeader\";\nimport { Table, Input, FormGroup, Label, Button } from \"reactstrap\";\nimport { Edit, Trash2, Link } from 'react-feather';\nimport RoleNew from './roleNew';\nimport axiosService from '../../services/axios';\n\nvar Role =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Role, _React$Component);\n\n  function Role() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Role);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Role)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      roles: [],\n      formErrors: [],\n      showForm: false\n    };\n\n    _this.processNewRoleForm =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(name, slug) {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return axiosService.post('roles', {\n                  name: name,\n                  slug: slug\n                }).then(function (res) {\n                  _this.setState({\n                    roles: _this.state.roles.concat(res.data.data)\n                  });\n\n                  _this.setState({\n                    formErrors: []\n                  });\n                }).catch(function (error) {\n                  _this.setState({\n                    formErrors: error.response.data.errors\n                  });\n\n                  _this.setState({\n                    showForm: true\n                  });\n                });\n\n              case 2:\n                response = _context.sent;\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x, _x2) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    _this.remove = function (rowId) {\n      var array = _toConsumableArray(_this.state.roles); // make a separate copy of the array\n\n\n      var index = array.indexOf(rowId);\n      console.log(index);\n\n      if (index !== -1) {\n        array.splice(index, 1);\n\n        _this.setState({\n          roles: array\n        });\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(Role, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      axiosService.get(\"roles\").then(function (res) {\n        _this2.setState({\n          roles: res.data.data\n        });\n      }).catch(function (error) {// console.log(error);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(ContentHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, \"Roles \"), React.createElement(RoleNew, {\n        onSubmit: this.processNewRoleForm,\n        formErrors: this.state.formErrors,\n        showForm: this.state.showForm,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }), React.createElement(Table, {\n        responsive: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        check: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(Label, {\n        check: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(Input, {\n        type: \"checkbox\",\n        id: \"checkbox1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }), \" #\"))), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, \"Name\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, \"Slug\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, \"Action\"))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, this.state.roles.map(function (roles) {\n        return React.createElement(\"tr\", {\n          key: roles.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80\n          },\n          __self: this\n        }, React.createElement(\"th\", {\n          scope: \"row\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82\n          },\n          __self: this\n        }, \" \", React.createElement(FormGroup, {\n          check: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85\n          },\n          __self: this\n        }, React.createElement(Label, {\n          check: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86\n          },\n          __self: this\n        }, React.createElement(Input, {\n          type: \"checkbox\",\n          id: \"checkbox2\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87\n          },\n          __self: this\n        }), \" \", roles.id))), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93\n          },\n          __self: this\n        }, roles.name), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94\n          },\n          __self: this\n        }, roles.slug), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96\n          },\n          __self: this\n        }, React.createElement(Edit, {\n          size: 18,\n          className: \"mr-2\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96\n          },\n          __self: this\n        }), \" \", React.createElement(\"a\", {\n          href: \"#\",\n          onClick: function onClick() {\n            return _this3.remove(roles.id);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96\n          },\n          __self: this\n        }, React.createElement(Trash2, {\n          size: 18,\n          color: \"#FF586B\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96\n          },\n          __self: this\n        }))));\n      }))));\n    }\n  }]);\n\n  return Role;\n}(React.Component);\n\nexport default Role;","map":{"version":3,"sources":["C:/xampp/htdocs/api_react/src/app-compoments/role/roles.jsx"],"names":["React","Fragment","ContentHeader","Table","Input","FormGroup","Label","Button","Edit","Trash2","Link","RoleNew","axiosService","Role","state","roles","formErrors","showForm","processNewRoleForm","name","slug","post","then","res","setState","concat","data","catch","error","response","errors","remove","rowId","array","index","indexOf","console","log","splice","get","map","id","Component"],"mappings":"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","sourcesContent":["import React, {  Fragment } from \"react\";\r\nimport ContentHeader from \"../../components/contentHead/contentHeader\";\r\nimport { Table, Input, FormGroup, Label, Button } from \"reactstrap\";\r\nimport { Edit, Trash2, Link } from 'react-feather';\r\nimport RoleNew from './roleNew';\r\nimport axiosService from '../../services/axios';\r\n\r\nclass Role extends React.Component {\r\n   state={roles:[], \r\n      formErrors: [],\r\n      showForm : false}\r\n  \r\n      componentDidMount() {\r\n      axiosService.get(`roles`)\r\n        .then(res => {\r\n          this.setState({roles: res.data.data});\r\n          \r\n        })\r\n        .catch(error => {\r\n         // console.log(error);\r\n        }\r\n         )\r\n    }\r\n\r\n   processNewRoleForm = async (name, slug ) =>  {\r\n      const response = await axiosService.post('roles',\r\n      {name, slug}\r\n      )\r\n      .then(res => {\r\n         this.setState({\r\n            roles: this.state.roles.concat(res.data.data)\r\n          })\r\n          this.setState({formErrors:[]})\r\n      })\r\n      \r\n      .catch(error =>{\r\n         this.setState({formErrors: error.response.data.errors})\r\n         this.setState({ showForm : true})\r\n\r\n        \r\n      })\r\n   }\r\n\r\n   remove = (rowId) => {\r\n      var array = [...this.state.roles]; // make a separate copy of the array\r\n  var index = array.indexOf(rowId)\r\n  console.log(index);\r\n  if (index !== -1) {\r\n    array.splice(index, 1);\r\n    this.setState({roles: array});\r\n  }\r\n    };\r\n\r\n\r\n   render() {\r\n      return (\r\n        <Fragment>\r\n        <ContentHeader>Roles </ContentHeader>\r\n       \r\n        <RoleNew onSubmit={this.processNewRoleForm} formErrors = {this.state.formErrors}  showForm = {this.state.showForm}/>\r\n\r\n        <Table responsive>\r\n            <thead>\r\n               <tr >\r\n                  <th>\r\n                     <FormGroup check>\r\n                        <Label check>\r\n                           <Input type=\"checkbox\" id=\"checkbox1\" /> #\r\n                        </Label>\r\n                     </FormGroup>\r\n                  </th>\r\n                  <th>Name</th>\r\n                  <th>Slug</th>\r\n                  <th>Action</th>\r\n                \r\n               </tr>\r\n            </thead>\r\n            <tbody>\r\n            {this.state.roles.map((roles) => \r\n               <tr key={roles.id}>\r\n\r\n                  <th scope=\"row\">\r\n                     {\" \"}\r\n                     \r\n                     <FormGroup check>\r\n                        <Label check>\r\n                           <Input type=\"checkbox\" id=\"checkbox2\" /> {roles.id}\r\n                        </Label>\r\n                     </FormGroup>\r\n\r\n                  </th>\r\n                  \r\n                  <td>{roles.name}</td>\r\n                  <td>{roles.slug}</td>\r\n                 \r\n                  <td><Edit size={18} className=\"mr-2\" /> <a href=\"#\" onClick={() => this.remove(roles.id)}><Trash2 size={18} color=\"#FF586B\"/></a></td>\r\n                 \r\n               </tr>\r\n                )}\r\n            \r\n            </tbody>\r\n         </Table>\r\n         </Fragment>\r\n      );\r\n   }\r\n}\r\n\r\n\r\nexport default Role;"]},"metadata":{},"sourceType":"module"}