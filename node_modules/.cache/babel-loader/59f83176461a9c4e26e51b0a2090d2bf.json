{"ast":null,"code":"import _classCallCheck from \"C:\\\\xampp\\\\htdocs\\\\api_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\xampp\\\\htdocs\\\\api_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\xampp\\\\htdocs\\\\api_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\xampp\\\\htdocs\\\\api_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\xampp\\\\htdocs\\\\api_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\api_react\\\\src\\\\views\\\\ui-kit\\\\textUtility.js\";\nimport React, { Component, Fragment } from \"react\";\nimport ContentHeader from \"../../components/contentHead/contentHeader\";\nimport { Table, Card, CardBody, CardTitle, Row, Col } from \"reactstrap\"; //Prism\n// eslint-disable-next-line\n\nimport Prism from \"prismjs\"; //Include JS\n\nimport \"prismjs/themes/prism-okaidia.css\"; //Include CSS\n\nimport { PrismCode } from \"react-prism\"; //Prism Component\n\nvar TextUtility =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(TextUtility, _Component);\n\n  function TextUtility() {\n    _classCallCheck(this, TextUtility);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(TextUtility).apply(this, arguments));\n  }\n\n  _createClass(TextUtility, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14\n        },\n        __self: this\n      }, React.createElement(ContentHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      }, \"Text Utilities \"), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }, React.createElement(Col, {\n        sm: \"12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, React.createElement(CardTitle, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, \"Contextual colors\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, \"Convey meaning through color with a handful of emphasis utility classes. These may also be applied to links and will darken on hover just like our default link styles.\")), React.createElement(Table, {\n        responsive: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, \"Example\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, \"Classes\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, \"Snippet\"))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"text-muted\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, \"Fusce dapibus, tellus ac cursus commodo, tortor mauris nibh.\")), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(\"code\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, \".text-muted\")), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(PrismCode, {\n        component: \"pre\",\n        className: \"language-markup\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, \"<p className=\\\"text-muted\\\">Your Text.</p>\"))), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"text-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, \"Nullam id dolor id nibh ultricies vehicula ut id elit.\")), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(\"code\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, \".text-primary\")), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(PrismCode, {\n        component: \"pre\",\n        className: \"language-markup\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, \"<p className=\\\"text-primary\\\">Your Text.</p>\"))), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"text-success\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, \"Duis mollis, est non commodo luctus, nisi erat porttitor ligula.\")), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(\"code\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, \".text-success\")), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(PrismCode, {\n        component: \"pre\",\n        className: \"language-markup\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, \"<p className=\\\"text-success\\\">Your Text.</p>\"))), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"text-info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, \"Maecenas sed diam eget risus varius blandit sit amet non magna.\")), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, React.createElement(\"code\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, \".text-info\")), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, React.createElement(PrismCode, {\n        component: \"pre\",\n        className: \"language-markup\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, \"<p className=\\\"text-info\\\">Your Text.</p>\"))), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"text-warning\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, \"Fusce dapibus, tellus ac cursus commodo, tortor mauris nibh.\")), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, React.createElement(\"code\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, \".text-warning\")), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, React.createElement(PrismCode, {\n        component: \"pre\",\n        className: \"language-markup\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, \"<p className=\\\"text-warning\\\">Your Text.</p>\"))), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"text-danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, \"Donec ullamcorper nulla non metus auctor fringilla.\")), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, React.createElement(\"code\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, \".text-danger\")), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, React.createElement(PrismCode, {\n        component: \"pre\",\n        className: \"language-markup\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, \"<p className=\\\"text-danger\\\">Your Text.</p>\"))))), React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, \"APEX React Admin also provide custom\", React.createElement(\"a\", {\n        href: \"link\",\n        target: \"_blank\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, \"color palette\"), \"for the text, below table show you usage.\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, \"You can also use text lighten, darken and accent classes.\"), React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, React.createElement(\"code\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }, \"li.red .lighten-*\"), \" For lighten red text color, this two classes needed. Here *: 1,2,3,4 for lighten red color options.\"), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }, React.createElement(\"code\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, \".red .darken-*\"), \" For darken red text color, this two classes needed. Here *: 1,2,3,4 for darken red color options.\"), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }, React.createElement(\"code\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }, \".red .accent-*\"), \" For accent red text color, this two classes needed. Here *: 1,2,3,4 for accent red color options.\"))), React.createElement(Table, {\n        responsive: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }, \"Example\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }, \"Classes\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }, \"Snippet\"))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"red\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }, \"Fusce dapibus, tellus ac cursus commodo, tortor mauris nibh.\")), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      }, React.createElement(\"code\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }, \".red\")), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }, React.createElement(PrismCode, {\n        component: \"pre\",\n        className: \"language-markup\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210\n        },\n        __self: this\n      }, \"<p className=\\\"red\\\">Your Text.</p>\"))), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"purple\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221\n        },\n        __self: this\n      }, \"Nullam id dolor id nibh ultricies vehicula ut id elit.\")), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        },\n        __self: this\n      }, React.createElement(\"code\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      }, \".purple\")), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        },\n        __self: this\n      }, React.createElement(PrismCode, {\n        component: \"pre\",\n        className: \"language-markup\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      }, \"<p className=\\\"purple\\\">Your Text.</p>\"))), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"cyan\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241\n        },\n        __self: this\n      }, \"Duis mollis, est non commodo luctus, nisi erat porttitor ligula.\")), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246\n        },\n        __self: this\n      }, React.createElement(\"code\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247\n        },\n        __self: this\n      }, \".cyan\")), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249\n        },\n        __self: this\n      }, React.createElement(PrismCode, {\n        component: \"pre\",\n        className: \"language-markup\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250\n        },\n        __self: this\n      }, \"<p className=\\\"cyan\\\">Your Text.</p>\"))), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"blue\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261\n        },\n        __self: this\n      }, \"Maecenas sed diam eget risus varius blandit sit amet non magna.\")), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266\n        },\n        __self: this\n      }, React.createElement(\"code\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267\n        },\n        __self: this\n      }, \".blue\")), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 269\n        },\n        __self: this\n      }, React.createElement(PrismCode, {\n        component: \"pre\",\n        className: \"language-markup\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270\n        },\n        __self: this\n      }, \"<p className=\\\"blue\\\">Your Text.</p>\"))), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"teal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281\n        },\n        __self: this\n      }, \"Fusce dapibus, tellus ac cursus commodo, tortor mauris nibh.\")), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286\n        },\n        __self: this\n      }, React.createElement(\"code\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287\n        },\n        __self: this\n      }, \".teal\")), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 289\n        },\n        __self: this\n      }, React.createElement(PrismCode, {\n        component: \"pre\",\n        className: \"language-markup\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 290\n        },\n        __self: this\n      }, \"<p className=\\\"teal\\\">Your Text.</p>\"))), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 299\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 300\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"blue-grey\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 301\n        },\n        __self: this\n      }, \"Donec ullamcorper nulla non metus auctor fringilla.\")), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 306\n        },\n        __self: this\n      }, React.createElement(\"code\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 307\n        },\n        __self: this\n      }, \".blue-grey\")), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 309\n        },\n        __self: this\n      }, React.createElement(PrismCode, {\n        component: \"pre\",\n        className: \"language-markup\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 310\n        },\n        __self: this\n      }, \"<p className=\\\"blue-grey\\\">Your Text.</p>\")))))))), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 325\n        },\n        __self: this\n      }, React.createElement(Col, {\n        sm: \"12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 326\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 327\n        },\n        __self: this\n      }, React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 328\n        },\n        __self: this\n      }, React.createElement(CardTitle, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 329\n        },\n        __self: this\n      }, \"Contextual background\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 330\n        },\n        __self: this\n      }, \"Contextual text color classes, easily set the background of an element to any contextual class. Anchor components will darken on hover, just like the text classes.\")), React.createElement(Table, {\n        responsive: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 337\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 338\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 339\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 340\n        },\n        __self: this\n      }, \"Example\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 341\n        },\n        __self: this\n      }, \"Classes\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 342\n        },\n        __self: this\n      }, \"Snippet\"))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 345\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 346\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 347\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"bg-primary text-highlight white\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 348\n        },\n        __self: this\n      }, \"Nullam id dolor id nibh ultricies vehicula ut id elit.\")), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 353\n        },\n        __self: this\n      }, React.createElement(\"code\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 354\n        },\n        __self: this\n      }, \".bg-primary\")), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 356\n        },\n        __self: this\n      }, React.createElement(\"pre\", {\n        className: \"language-markup\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 357\n        },\n        __self: this\n      }, React.createElement(\"code\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 358\n        },\n        __self: this\n      }, \"<p className=\\\"bg-primary\\\">Your Text.</p>\")))), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 365\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 366\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"bg-success text-highlight white\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 367\n        },\n        __self: this\n      }, \"Duis mollis, est non commodo luctus, nisi erat porttitor ligula.\")), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 372\n        },\n        __self: this\n      }, React.createElement(\"code\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 373\n        },\n        __self: this\n      }, \".bg-success\")), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 375\n        },\n        __self: this\n      }, React.createElement(\"pre\", {\n        className: \"language-markup\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 376\n        },\n        __self: this\n      }, React.createElement(\"code\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 377\n        },\n        __self: this\n      }, \"<p className=\\\"bg-success\\\">Your Text.</p>\")))), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 384\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 385\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"bg-info text-highlight white\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 386\n        },\n        __self: this\n      }, \"Maecenas sed diam eget risus varius blandit sit amet non magna.\")), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 391\n        },\n        __self: this\n      }, React.createElement(\"code\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 392\n        },\n        __self: this\n      }, \".bg-info\")), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 394\n        },\n        __self: this\n      }, React.createElement(\"pre\", {\n        className: \"language-markup\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 395\n        },\n        __self: this\n      }, React.createElement(\"code\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 396\n        },\n        __self: this\n      }, \"<p className=\\\"bg-info\\\">Your Text.</p>\")))), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 403\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 404\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"bg-warning text-highlight white\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 405\n        },\n        __self: this\n      }, \"Fusce dapibus, tellus ac cursus commodo, tortor mauris nibh.\")), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 410\n        },\n        __self: this\n      }, React.createElement(\"code\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 411\n        },\n        __self: this\n      }, \".bg-warning\")), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 413\n        },\n        __self: this\n      }, React.createElement(\"pre\", {\n        className: \"language-markup\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 414\n        },\n        __self: this\n      }, React.createElement(\"code\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 415\n        },\n        __self: this\n      }, \"<p className=\\\"bg-warning\\\">Your Text.</p>\")))), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 422\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 423\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"bg-danger text-highlight white\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 424\n        },\n        __self: this\n      }, \"Donec ullamcorper nulla non metus auctor fringilla.\")), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 429\n        },\n        __self: this\n      }, React.createElement(\"code\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 430\n        },\n        __self: this\n      }, \".bg-danger\")), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 432\n        },\n        __self: this\n      }, React.createElement(\"pre\", {\n        className: \"language-markup\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 433\n        },\n        __self: this\n      }, React.createElement(\"code\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 434\n        },\n        __self: this\n      }, \"<p className=\\\"bg-danger\\\">Your Text.</p>\")))), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 441\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 442\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"bg-dark text-highlight white\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 443\n        },\n        __self: this\n      }, \"Fusce dapibus, tellus ac cursus commodo, tortor mauris nibh.\")), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 448\n        },\n        __self: this\n      }, React.createElement(\"code\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 449\n        },\n        __self: this\n      }, \".bg-dark\")), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 451\n        },\n        __self: this\n      }, React.createElement(\"pre\", {\n        className: \"language-markup\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 452\n        },\n        __self: this\n      }, React.createElement(\"code\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 453\n        },\n        __self: this\n      }, \"<p className=\\\"bg-dark\\\">Your Text.</p>\")))))), React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 462\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 463\n        },\n        __self: this\n      }, \"APEX Admin also provide custom\", \" \", React.createElement(\"a\", {\n        href: \"link\",\n        target: \"_blank\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 465\n        },\n        __self: this\n      }, \"color palette\"), \" \", \"for the background colors, below table show you usage.\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 471\n        },\n        __self: this\n      }, \"You can also use background lighten, darken and accent classes.\"), React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 475\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 476\n        },\n        __self: this\n      }, React.createElement(\"code\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 477\n        },\n        __self: this\n      }, \".bg-red .bg-lighten-*\"), \" For lighten red text color, this two classes needed. Here *: 1,2,3,4 for lighten red color options.\"), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 481\n        },\n        __self: this\n      }, React.createElement(\"code\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 482\n        },\n        __self: this\n      }, \".bg-red .bg-darken-*\"), \" For darken red text color, this two classes needed. Here *: 1,2,3,4 for darken red color options.\"), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 486\n        },\n        __self: this\n      }, React.createElement(\"code\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 487\n        },\n        __self: this\n      }, \".bg-red .bg-accent-*\"), \" For accent red text color, this two classes needed. Here *: 1,2,3,4 for accent red color options.\"))), React.createElement(Table, {\n        responsive: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 493\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 494\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 495\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 496\n        },\n        __self: this\n      }, \"Example\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 497\n        },\n        __self: this\n      }, \"Classes\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 498\n        },\n        __self: this\n      }, \"Snippet\"))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 501\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 502\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 503\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"bg-red bg-dark text-highlight white\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 504\n        },\n        __self: this\n      }, \" \", \"Fusce dapibus, tellus ac cursus commodo.\")), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 509\n        },\n        __self: this\n      }, React.createElement(\"code\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 510\n        },\n        __self: this\n      }, \".bg-red\")), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 512\n        },\n        __self: this\n      }, React.createElement(\"pre\", {\n        className: \"language-markup\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 513\n        },\n        __self: this\n      }, React.createElement(\"code\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 514\n        },\n        __self: this\n      }, \"<p className=\\\"bg-red bg-dark\\\">Your Text.</p>\")))), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 521\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 522\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"bg-purple bg-dark text-highlight white\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 523\n        },\n        __self: this\n      }, \" \", \"Nullam id dolor id nibh ultricies.\")), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 528\n        },\n        __self: this\n      }, React.createElement(\"code\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 529\n        },\n        __self: this\n      }, \".purple\")), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 531\n        },\n        __self: this\n      }, React.createElement(\"pre\", {\n        className: \"language-markup\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 532\n        },\n        __self: this\n      }, React.createElement(\"code\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 533\n        },\n        __self: this\n      }, \"<p className=\\\"bg-purple bg-dark\\\">Your Text.</p>\")))), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 540\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 541\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"bg-cyan bg-dark text-highlight white\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 542\n        },\n        __self: this\n      }, \" \", \"Duis mollis, est non commodo luctus, nisi erat.\")), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 548\n        },\n        __self: this\n      }, React.createElement(\"code\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 549\n        },\n        __self: this\n      }, \".bg-cyan\")), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 551\n        },\n        __self: this\n      }, React.createElement(\"pre\", {\n        className: \"language-markup\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 552\n        },\n        __self: this\n      }, React.createElement(\"code\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 553\n        },\n        __self: this\n      }, \"<p className=\\\"bg-cyan bg-dark\\\">Your Text.</p>\")))), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 560\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 561\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"bg-blue bg-dark text-highlight white\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 562\n        },\n        __self: this\n      }, \" \", \"Maecenas sed diam eget risus varius blandit sit.\")), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 568\n        },\n        __self: this\n      }, React.createElement(\"code\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 569\n        },\n        __self: this\n      }, \".bg-blue\")), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 571\n        },\n        __self: this\n      }, React.createElement(\"pre\", {\n        className: \"language-markup\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 572\n        },\n        __self: this\n      }, React.createElement(\"code\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 573\n        },\n        __self: this\n      }, \"<p className=\\\"bg-blue bg-dark\\\">Your Text.</p>\")))), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 580\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 581\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"bg-teal bg-dark text-highlight white\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 582\n        },\n        __self: this\n      }, \" \", \"Fusce dapibus, tellus ac cursus commodo.\")), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 587\n        },\n        __self: this\n      }, React.createElement(\"code\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 588\n        },\n        __self: this\n      }, \".bg-teal\")), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 590\n        },\n        __self: this\n      }, React.createElement(\"pre\", {\n        className: \"language-markup\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 591\n        },\n        __self: this\n      }, React.createElement(\"code\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 592\n        },\n        __self: this\n      }, \"<p className=\\\"bg-teal bg-dark\\\">Your Text.</p>\")))), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 599\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 600\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"bg-blue-grey bg-dark text-highlight white\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 601\n        },\n        __self: this\n      }, \" \", \"Donec ullamcorper nulla non metus.\")), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 606\n        },\n        __self: this\n      }, React.createElement(\"code\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 607\n        },\n        __self: this\n      }, \".blue-grey\")), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 609\n        },\n        __self: this\n      }, React.createElement(\"pre\", {\n        className: \"language-markup\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 610\n        },\n        __self: this\n      }, React.createElement(\"code\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 611\n        },\n        __self: this\n      }, \"<p className=\\\"blue-grey bg-dark\\\">Your Text.</p>\"))))))))), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 624\n        },\n        __self: this\n      }, React.createElement(Col, {\n        sm: \"12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 625\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 626\n        },\n        __self: this\n      }, React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 627\n        },\n        __self: this\n      }, React.createElement(CardTitle, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 628\n        },\n        __self: this\n      }, \"Text alignment\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 629\n        },\n        __self: this\n      }, \"Easily realign text to components with text alignment classes.\")), React.createElement(Table, {\n        responsive: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 634\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 635\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 636\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 637\n        },\n        __self: this\n      }, \"Example\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 638\n        },\n        __self: this\n      }, \"Classes\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 639\n        },\n        __self: this\n      }, \"Snippet\"))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 642\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 643\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 644\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"text-justify\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 645\n        },\n        __self: this\n      }, \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s.\")), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 652\n        },\n        __self: this\n      }, React.createElement(\"code\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 653\n        },\n        __self: this\n      }, \".text-justify\")), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 655\n        },\n        __self: this\n      }, React.createElement(\"pre\", {\n        className: \"language-markup\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 656\n        },\n        __self: this\n      }, React.createElement(\"code\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 657\n        },\n        __self: this\n      }, \"<p className=\\\"text-justify\\\">Justified text.</p>\")))), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 665\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 666\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"text-nowrap\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 667\n        },\n        __self: this\n      }, \"It is a long established fact that a reader.\")), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 671\n        },\n        __self: this\n      }, React.createElement(\"code\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 672\n        },\n        __self: this\n      }, \".text-nowrap\")), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 674\n        },\n        __self: this\n      }, React.createElement(\"pre\", {\n        className: \"language-markup\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 675\n        },\n        __self: this\n      }, React.createElement(\"code\", {\n        className: \"language-markup\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 676\n        },\n        __self: this\n      }, \"<p className=\\\"text-nowrap\\\">No wrap text.</p>\"))))))))), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 689\n        },\n        __self: this\n      }, React.createElement(Col, {\n        sm: \"12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 690\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 691\n        },\n        __self: this\n      }, React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 692\n        },\n        __self: this\n      }, React.createElement(CardTitle, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 693\n        },\n        __self: this\n      }, \"Text transform\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 694\n        },\n        __self: this\n      }, \"Transform text in components with text capitalization classes.\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 698\n        },\n        __self: this\n      }, \"Note how\", \" \", React.createElement(\"code\", {\n        className: \"highlighter-rouge\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 700\n        },\n        __self: this\n      }, \"text-capitalize\"), \" \", \"only changes the first letter of each word, leaving the case of any other letters unaffected.\")), React.createElement(Table, {\n        responsive: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 707\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 708\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 709\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 710\n        },\n        __self: this\n      }, \"Example\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 711\n        },\n        __self: this\n      }, \"Classes\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 712\n        },\n        __self: this\n      }, \"Snippet\"))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 715\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 716\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 717\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"text-lowercase\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 718\n        },\n        __self: this\n      }, \"Lowercased text.\")), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 722\n        },\n        __self: this\n      }, React.createElement(\"code\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 723\n        },\n        __self: this\n      }, \".text-lowercase\")), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 725\n        },\n        __self: this\n      }, React.createElement(\"pre\", {\n        className: \"language-markup\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 726\n        },\n        __self: this\n      }, React.createElement(\"code\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 727\n        },\n        __self: this\n      }, \"<p className=\\\"text-lowercase\\\">Lowercased text.</p>\")))), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 735\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 736\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"text-uppercase\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 737\n        },\n        __self: this\n      }, \"Uppercased text.\")), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 741\n        },\n        __self: this\n      }, React.createElement(\"code\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 742\n        },\n        __self: this\n      }, \".text-uppercase\")), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 744\n        },\n        __self: this\n      }, React.createElement(\"pre\", {\n        className: \"language-markup\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 745\n        },\n        __self: this\n      }, React.createElement(\"code\", {\n        className: \"language-markup\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 746\n        },\n        __self: this\n      }, \"<p className=\\\"text-uppercase\\\">Uppercased text.</p>\")))), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 754\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 755\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"text-capitalize\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 756\n        },\n        __self: this\n      }, \"CapiTaliZed text.\")), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 760\n        },\n        __self: this\n      }, React.createElement(\"code\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 761\n        },\n        __self: this\n      }, \".text-capitalize\")), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 763\n        },\n        __self: this\n      }, React.createElement(\"pre\", {\n        className: \"language-markup\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 764\n        },\n        __self: this\n      }, React.createElement(\"code\", {\n        className: \"language-markup\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 765\n        },\n        __self: this\n      }, \"<p className=\\\"text-capitalize\\\">CapiTaliZed text.</p>\"))))))))), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 779\n        },\n        __self: this\n      }, React.createElement(Col, {\n        sm: \"12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 780\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 781\n        },\n        __self: this\n      }, React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 782\n        },\n        __self: this\n      }, React.createElement(CardTitle, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 783\n        },\n        __self: this\n      }, \"Text Option\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 784\n        },\n        __self: this\n      }, \"APEX Admin provide font large & small sizes variant classes to change font size.\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 788\n        },\n        __self: this\n      }, \"Note how\", \" \", React.createElement(\"code\", {\n        className: \"highlighter-rouge\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 790\n        },\n        __self: this\n      }, \"text-capitalize\"), \" \", \"only changes the first letter of each word, leaving the case of any other letters unaffected.\")), React.createElement(Table, {\n        responsive: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 797\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 798\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 799\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 800\n        },\n        __self: this\n      }, \"Example\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 801\n        },\n        __self: this\n      }, \"Classes\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 802\n        },\n        __self: this\n      }, \"Snippet\"))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 805\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 806\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 807\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"font-large-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 808\n        },\n        __self: this\n      }, \"Large lg text size.\")), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 810\n        },\n        __self: this\n      }, React.createElement(\"code\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 811\n        },\n        __self: this\n      }, \".font-large-3\")), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 813\n        },\n        __self: this\n      }, React.createElement(\"pre\", {\n        className: \"language-markup\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 814\n        },\n        __self: this\n      }, React.createElement(\"code\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 815\n        },\n        __self: this\n      }, \"<p className=\\\"font-large-3\\\" >Large lg text size.</p>\")))), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 822\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 823\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"font-large-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 824\n        },\n        __self: this\n      }, \"Large lg text size.\")), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 826\n        },\n        __self: this\n      }, React.createElement(\"code\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 827\n        },\n        __self: this\n      }, \".font-large-2\")), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 829\n        },\n        __self: this\n      }, React.createElement(\"pre\", {\n        className: \"language-markup\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 830\n        },\n        __self: this\n      }, React.createElement(\"code\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 831\n        },\n        __self: this\n      }, \"<p className=\\\"font-large-2\\\" >Large lg text size.</p>\")))), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 838\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 839\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"font-large-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 840\n        },\n        __self: this\n      }, \"Large lg text size.\")), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 842\n        },\n        __self: this\n      }, React.createElement(\"code\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 843\n        },\n        __self: this\n      }, \".font-large-1\")), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 845\n        },\n        __self: this\n      }, React.createElement(\"pre\", {\n        className: \"language-markup\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 846\n        },\n        __self: this\n      }, React.createElement(\"code\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 847\n        },\n        __self: this\n      }, \"<p className=\\\"font-large-1\\\" >Large lg text size.</p>\")))), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 854\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 855\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"font-medium-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 856\n        },\n        __self: this\n      }, \"Large md text size.\")), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 860\n        },\n        __self: this\n      }, React.createElement(\"code\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 861\n        },\n        __self: this\n      }, \".font-medium-3\")), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 863\n        },\n        __self: this\n      }, React.createElement(\"pre\", {\n        className: \"language-markup\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 864\n        },\n        __self: this\n      }, React.createElement(\"code\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 865\n        },\n        __self: this\n      }, \"<p className=\\\"font-medium-3\\\" >Large md text size.</p>\")))), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 872\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 873\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"font-medium-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 874\n        },\n        __self: this\n      }, \"Large md text size.\")), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 878\n        },\n        __self: this\n      }, React.createElement(\"code\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 879\n        },\n        __self: this\n      }, \".font-medium-2\")), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 881\n        },\n        __self: this\n      }, React.createElement(\"pre\", {\n        className: \"language-markup\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 882\n        },\n        __self: this\n      }, React.createElement(\"code\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 883\n        },\n        __self: this\n      }, \"<p className=\\\"font-medium-2\\\" >Large md text size.</p>\")))), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 890\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 891\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"font-medium-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 892\n        },\n        __self: this\n      }, \"Large sm text size.\")), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 896\n        },\n        __self: this\n      }, React.createElement(\"code\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 897\n        },\n        __self: this\n      }, \".font-medium-1\")), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 899\n        },\n        __self: this\n      }, React.createElement(\"pre\", {\n        className: \"language-markup\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 900\n        },\n        __self: this\n      }, React.createElement(\"code\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 901\n        },\n        __self: this\n      }, \"<p className=\\\"font-medium-1\\\" >Large sm text size.</p>\")))), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 908\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 909\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 910\n        },\n        __self: this\n      }, \"Normal base text size.\")), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 912\n        },\n        __self: this\n      }, \"N/A\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 913\n        },\n        __self: this\n      }, React.createElement(\"pre\", {\n        className: \"language-markup\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 914\n        },\n        __self: this\n      }, React.createElement(\"code\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 915\n        },\n        __self: this\n      }, \"<p>Normal base text size.</p>\")))), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 921\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 922\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"font-small-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 923\n        },\n        __self: this\n      }, \"Small lg text size.\")), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 925\n        },\n        __self: this\n      }, React.createElement(\"code\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 926\n        },\n        __self: this\n      }, \".font-small-3\")), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 928\n        },\n        __self: this\n      }, React.createElement(\"pre\", {\n        className: \"language-markup\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 929\n        },\n        __self: this\n      }, React.createElement(\"code\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 930\n        },\n        __self: this\n      }, \"<p className=\\\"font-small-3\\\" >Small lg text size.</p>\")))), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 937\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 938\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"font-small-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 939\n        },\n        __self: this\n      }, \"Small md text size.\")), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 941\n        },\n        __self: this\n      }, React.createElement(\"code\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 942\n        },\n        __self: this\n      }, \".font-small-2\")), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 944\n        },\n        __self: this\n      }, React.createElement(\"pre\", {\n        className: \"language-markup\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 945\n        },\n        __self: this\n      }, React.createElement(\"code\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 946\n        },\n        __self: this\n      }, \"<p className=\\\"font-small-2\\\" >Small md text size.</p>\")))), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 953\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 954\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"font-small-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 955\n        },\n        __self: this\n      }, \"Small sm text size.\")), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 957\n        },\n        __self: this\n      }, React.createElement(\"code\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 958\n        },\n        __self: this\n      }, \".font-small-1\")), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 960\n        },\n        __self: this\n      }, React.createElement(\"pre\", {\n        className: \"language-markup\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 961\n        },\n        __self: this\n      }, React.createElement(\"code\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 962\n        },\n        __self: this\n      }, \"<p className=\\\"font-small-1\\\" >Small sm text size.</p>\")))))), React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 972\n        },\n        __self: this\n      }, React.createElement(CardTitle, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 973\n        },\n        __self: this\n      }, \"Text Option\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 974\n        },\n        __self: this\n      }, \"APEX Admin provide font large & small sizes variant classes to change font size.\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 978\n        },\n        __self: this\n      }, \"Note how\", \" \", React.createElement(\"code\", {\n        className: \"highlighter-rouge\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 980\n        },\n        __self: this\n      }, \"text-capitalize\"), \" \", \"only changes the first letter of each word, leaving the case of any other letters unaffected.\")), React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 988\n        },\n        __self: this\n      }, React.createElement(CardTitle, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 989\n        },\n        __self: this\n      }, \"Font weight\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 990\n        },\n        __self: this\n      }, \"APEX Admin provide font weight class\", \" \", React.createElement(\"code\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 992\n        },\n        __self: this\n      }, \".text-bold- [weight]\"), \", where\", \" \", React.createElement(\"code\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 997\n        },\n        __self: this\n      }, \"[weight] value can be 100,200 ... 900.\"))), React.createElement(Table, {\n        responsive: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1000\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1001\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1002\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1003\n        },\n        __self: this\n      }, \"Example\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1004\n        },\n        __self: this\n      }, \"Classes\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1005\n        },\n        __self: this\n      }, \"Snippet\"))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1008\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1009\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1010\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"text-bold-300\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1011\n        },\n        __self: this\n      }, \"Font weight 300\")), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1013\n        },\n        __self: this\n      }, React.createElement(\"code\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1014\n        },\n        __self: this\n      }, \".text-bold-300\")), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1016\n        },\n        __self: this\n      }, React.createElement(\"pre\", {\n        className: \"language-markup\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1017\n        },\n        __self: this\n      }, React.createElement(\"code\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1018\n        },\n        __self: this\n      }, \"<p className=\\\"text-bold-300\\\">Font weight 300.</p>\")))), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1025\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1026\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"text-bold-400\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1027\n        },\n        __self: this\n      }, \"Font weight 400\")), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1029\n        },\n        __self: this\n      }, React.createElement(\"code\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1030\n        },\n        __self: this\n      }, \".text-bold-400\")), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1032\n        },\n        __self: this\n      }, React.createElement(\"pre\", {\n        className: \"language-markup\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1033\n        },\n        __self: this\n      }, React.createElement(\"code\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1034\n        },\n        __self: this\n      }, \"<p className=\\\"text-bold-400\\\">Font weight 400.</p>\")))), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1041\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1042\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"text-bold-600\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1043\n        },\n        __self: this\n      }, \"Font weight 600\")), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1045\n        },\n        __self: this\n      }, React.createElement(\"code\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1046\n        },\n        __self: this\n      }, \".text-bold-600\")), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1048\n        },\n        __self: this\n      }, React.createElement(\"pre\", {\n        className: \"language-markup\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1049\n        },\n        __self: this\n      }, React.createElement(\"code\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1050\n        },\n        __self: this\n      }, \"<p className=\\\"text-bold-600\\\">Font weight 600.</p>\")))), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1057\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1058\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"text-bold-700\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1059\n        },\n        __self: this\n      }, \"Font weight 700\")), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1061\n        },\n        __self: this\n      }, React.createElement(\"code\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1062\n        },\n        __self: this\n      }, \".text-bold-700\")), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1064\n        },\n        __self: this\n      }, React.createElement(\"pre\", {\n        className: \"language-markup\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1065\n        },\n        __self: this\n      }, React.createElement(\"code\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1066\n        },\n        __self: this\n      }, \"<p className=\\\"text-bold-700\\\">Font weight 700.</p>\")))))), React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1076\n        },\n        __self: this\n      }, React.createElement(CardTitle, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1077\n        },\n        __self: this\n      }, \"Inline text elements\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1078\n        },\n        __self: this\n      }, \"Styling for common inline HTML5 elements.\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1079\n        },\n        __self: this\n      }, React.createElement(\"code\", {\n        className: \"highlighter-rouge\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1080\n        },\n        __self: this\n      }, \".mark\"), \" and\", \" \", React.createElement(\"code\", {\n        className: \"highlighter-rouge\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1081\n        },\n        __self: this\n      }, \".small\"), \" classes are also available to apply the same styles as\", \" \", React.createElement(\"code\", {\n        className: \"highlighter-rouge\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1083\n        },\n        __self: this\n      }, \"<mark>\"), \" \", \"and\", \" \", React.createElement(\"code\", {\n        className: \"highlighter-rouge\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1085\n        },\n        __self: this\n      }, \"<small>\"), \" \", \"while avoiding any unwanted semantic implications that the tags would bring.\")), React.createElement(Table, {\n        responsive: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1090\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1091\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1092\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1093\n        },\n        __self: this\n      }, \"Example\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1094\n        },\n        __self: this\n      }, \"Snippet\"))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1097\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1098\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1099\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1100\n        },\n        __self: this\n      }, \"You can use the mark tag to\", React.createElement(\"mark\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1102\n        },\n        __self: this\n      }, \"highlight\"), \" text.\")), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1105\n        },\n        __self: this\n      }, React.createElement(\"pre\", {\n        className: \"language-markup\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1106\n        },\n        __self: this\n      }, React.createElement(\"code\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1107\n        },\n        __self: this\n      }, \"<p>You can use the mark tag to <mark>highlight</mark> text.</p>\")))), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1115\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1116\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1117\n        },\n        __self: this\n      }, React.createElement(\"del\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1118\n        },\n        __self: this\n      }, \"This line of text is meant to be treated as deleted text.\"))), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1124\n        },\n        __self: this\n      }, React.createElement(\"pre\", {\n        className: \"language-markup\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1125\n        },\n        __self: this\n      }, React.createElement(\"code\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1126\n        },\n        __self: this\n      }, \"<p><del>This line of text is meant to be treated as deleted text.</del></p>\")))), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1134\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1135\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1136\n        },\n        __self: this\n      }, React.createElement(\"s\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1137\n        },\n        __self: this\n      }, \"This line of text is meant to be treated as no longer accurate.\"))), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1143\n        },\n        __self: this\n      }, React.createElement(\"pre\", {\n        className: \"language-markup\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1144\n        },\n        __self: this\n      }, React.createElement(\"code\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1145\n        },\n        __self: this\n      }, \"<p><s>This line of text is meant to be treated as no longer accurate.</s></p>\")))), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1153\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1154\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1155\n        },\n        __self: this\n      }, \"This line of text\", React.createElement(\"ins\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1157\n        },\n        __self: this\n      }, \"is meant to be treated as an addition to the document.\"))), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1163\n        },\n        __self: this\n      }, React.createElement(\"pre\", {\n        className: \"language-markup\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1164\n        },\n        __self: this\n      }, React.createElement(\"code\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1165\n        },\n        __self: this\n      }, \"<p><ins>This line of text is meant to be treated as an addition to the document.</ins></p>\")))), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1173\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1174\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1175\n        },\n        __self: this\n      }, React.createElement(\"u\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1176\n        },\n        __self: this\n      }, \"This line of text will render as underlined\"))), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1182\n        },\n        __self: this\n      }, React.createElement(\"pre\", {\n        className: \"language-markup\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1183\n        },\n        __self: this\n      }, React.createElement(\"code\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1184\n        },\n        __self: this\n      }, \"<p><u>This line of text will render as underlined.</u></p>\")))), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1191\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1192\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1193\n        },\n        __self: this\n      }, React.createElement(\"small\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1194\n        },\n        __self: this\n      }, \"This line of text is meant to be treated as fine print.\"))), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1200\n        },\n        __self: this\n      }, React.createElement(\"pre\", {\n        className: \"language-markup\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1201\n        },\n        __self: this\n      }, React.createElement(\"code\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1202\n        },\n        __self: this\n      }, \"<p><small>This line of text is meant to be treated as fine print.</small></p>\")))), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1210\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1211\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1212\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1213\n        },\n        __self: this\n      }, \"This line rendered as bold text.\"))), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1218\n        },\n        __self: this\n      }, React.createElement(\"pre\", {\n        className: \"language-markup\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1219\n        },\n        __self: this\n      }, React.createElement(\"code\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1220\n        },\n        __self: this\n      }, \"<p><strong>This line rendered as bold text.</strong></p>\")))), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1227\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1228\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1229\n        },\n        __self: this\n      }, React.createElement(\"em\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1230\n        },\n        __self: this\n      }, \"This line rendered as italicized text.\"))), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1235\n        },\n        __self: this\n      }, React.createElement(\"pre\", {\n        className: \"language-markup\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1236\n        },\n        __self: this\n      }, React.createElement(\"code\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1237\n        },\n        __self: this\n      }, \"<p><em>This line rendered as italicized text.</em></p>\")))), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1244\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1245\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1246\n        },\n        __self: this\n      }, \"Sample\", React.createElement(\"abbr\", {\n        title: \"\",\n        \"data-popup\": \"tooltip\",\n        \"data-original-title\": \"Abbr title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1248\n        },\n        __self: this\n      }, \"abbreviation\"))), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1257\n        },\n        __self: this\n      }, React.createElement(\"pre\", {\n        className: \"language-markup\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1258\n        },\n        __self: this\n      }, React.createElement(\"code\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1259\n        },\n        __self: this\n      }, \"<p> Sample <abbr>Abbreviations.</abbr></p>\")))), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1266\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1267\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1268\n        },\n        __self: this\n      }, \"Sample\", React.createElement(\"abbr\", {\n        title: \"HyperText Markup Language\",\n        className: \"initialism\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1270\n        },\n        __self: this\n      }, \"HTML\"), \" \", \"title.\")), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1279\n        },\n        __self: this\n      }, React.createElement(\"pre\", {\n        className: \"language-markup\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1280\n        },\n        __self: this\n      }, React.createElement(\"code\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1281\n        },\n        __self: this\n      }, \"<p> Sample <abbr title=\\\"HyperText Markup Language\\\" className=\\\"initialism\\\">HTML.</abbr></p>\")))), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1289\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1290\n        },\n        __self: this\n      }, React.createElement(\"var\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1291\n        },\n        __self: this\n      }, \"y\"), \" =\", React.createElement(\"var\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1291\n        },\n        __self: this\n      }, \"m\"), React.createElement(\"var\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1292\n        },\n        __self: this\n      }, \"x\"), \" +\", React.createElement(\"var\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1292\n        },\n        __self: this\n      }, \"b\")), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1294\n        },\n        __self: this\n      }, React.createElement(\"pre\", {\n        className: \"language-markup\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1295\n        },\n        __self: this\n      }, React.createElement(\"code\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1296\n        },\n        __self: this\n      }, \"<p> For indicating variables use the <var> tag.</p>\")))), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1303\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1304\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1305\n        },\n        __self: this\n      }, \"Edit settings, press\", React.createElement(\"kbd\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1307\n        },\n        __self: this\n      }, React.createElement(\"kbd\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1308\n        },\n        __self: this\n      }, \"ctrl\"), \" +\", React.createElement(\"kbd\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1308\n        },\n        __self: this\n      }, \",\")))), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1312\n        },\n        __self: this\n      }, React.createElement(\"pre\", {\n        className: \"language-markup\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1313\n        },\n        __self: this\n      }, React.createElement(\"code\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1314\n        },\n        __self: this\n      }, \"<p> Use the <kbd> to indicate input that is typically entered via keyboard.</p>\")))), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1322\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1323\n        },\n        __self: this\n      }, React.createElement(\"samp\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1324\n        },\n        __self: this\n      }, \"This text is meant to be treated as sample output from a computer program.\")), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1329\n        },\n        __self: this\n      }, React.createElement(\"pre\", {\n        className: \"language-markup\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1330\n        },\n        __self: this\n      }, React.createElement(\"code\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1331\n        },\n        __self: this\n      }, \"<p> For indicating sample output from a program use the <samp> tag. </p>\")))), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1339\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1340\n        },\n        __self: this\n      }, React.createElement(\"code\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1341\n        },\n        __self: this\n      }, \"Inline code snippet\")), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1343\n        },\n        __self: this\n      }, React.createElement(\"pre\", {\n        className: \"language-markup\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1344\n        },\n        __self: this\n      }, React.createElement(\"code\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1345\n        },\n        __self: this\n      }, \"<p> Wrap inline snippets of code with <code> tag. </p>\"))))))))));\n    }\n  }]);\n\n  return TextUtility;\n}(Component);\n\nexport default TextUtility;","map":{"version":3,"sources":["C:/xampp/htdocs/api_react/src/views/ui-kit/textUtility.js"],"names":["React","Component","Fragment","ContentHeader","Table","Card","CardBody","CardTitle","Row","Col","Prism","PrismCode","TextUtility"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from \"react\";\r\nimport ContentHeader from \"../../components/contentHead/contentHeader\";\r\nimport { Table, Card, CardBody, CardTitle, Row, Col } from \"reactstrap\";\r\n\r\n//Prism\r\n// eslint-disable-next-line\r\nimport Prism from \"prismjs\"; //Include JS\r\nimport \"prismjs/themes/prism-okaidia.css\"; //Include CSS\r\nimport { PrismCode } from \"react-prism\"; //Prism Component\r\n\r\nclass TextUtility extends Component {\r\n   render() {\r\n      return (\r\n         <Fragment>\r\n            <ContentHeader>Text Utilities </ContentHeader>\r\n            {/* Contextual color */}\r\n            <Row>\r\n               <Col sm=\"12\">\r\n                  <Card>\r\n                     <CardBody>\r\n                        <CardTitle>Contextual colors</CardTitle>\r\n                        <p>\r\n                           Convey meaning through color with a handful of\r\n                           emphasis utility classes. These may also be applied\r\n                           to links and will darken on hover just like our\r\n                           default link styles.\r\n                        </p>\r\n                     </CardBody>\r\n                     <Table responsive>\r\n                        <thead>\r\n                           <tr>\r\n                              <th>Example</th>\r\n                              <th>Classes</th>\r\n                              <th>Snippet</th>\r\n                           </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                           <tr>\r\n                              <td>\r\n                                 <p className=\"text-muted\">\r\n                                    Fusce dapibus, tellus ac cursus commodo,\r\n                                    tortor mauris nibh.\r\n                                 </p>\r\n                              </td>\r\n                              <td>\r\n                                 <code>.text-muted</code>\r\n                              </td>\r\n                              <td>\r\n                                 <PrismCode\r\n                                    component=\"pre\"\r\n                                    className=\"language-markup\"\r\n                                 >\r\n                                    &lt;p className=\"text-muted\"&gt;Your\r\n                                    Text.&lt;/p&gt;\r\n                                 </PrismCode>\r\n                              </td>\r\n                           </tr>\r\n                           <tr>\r\n                              <td>\r\n                                 <p className=\"text-primary\">\r\n                                    Nullam id dolor id nibh ultricies vehicula\r\n                                    ut id elit.\r\n                                 </p>\r\n                              </td>\r\n                              <td>\r\n                                 <code>.text-primary</code>\r\n                              </td>\r\n                              <td>\r\n                                 <PrismCode\r\n                                    component=\"pre\"\r\n                                    className=\"language-markup\"\r\n                                 >\r\n                                    &lt;p className=\"text-primary\"&gt;Your\r\n                                    Text.&lt;/p&gt;\r\n                                 </PrismCode>\r\n                              </td>\r\n                           </tr>\r\n                           <tr>\r\n                              <td>\r\n                                 <p className=\"text-success\">\r\n                                    Duis mollis, est non commodo luctus, nisi\r\n                                    erat porttitor ligula.\r\n                                 </p>\r\n                              </td>\r\n                              <td>\r\n                                 <code>.text-success</code>\r\n                              </td>\r\n                              <td>\r\n                                 <PrismCode\r\n                                    component=\"pre\"\r\n                                    className=\"language-markup\"\r\n                                 >\r\n                                    &lt;p className=\"text-success\"&gt;Your\r\n                                    Text.&lt;/p&gt;\r\n                                 </PrismCode>\r\n                              </td>\r\n                           </tr>\r\n                           <tr>\r\n                              <td>\r\n                                 <p className=\"text-info\">\r\n                                    Maecenas sed diam eget risus varius blandit\r\n                                    sit amet non magna.\r\n                                 </p>\r\n                              </td>\r\n                              <td>\r\n                                 <code>.text-info</code>\r\n                              </td>\r\n                              <td>\r\n                                 <PrismCode\r\n                                    component=\"pre\"\r\n                                    className=\"language-markup\"\r\n                                 >\r\n                                    &lt;p className=\"text-info\"&gt;Your\r\n                                    Text.&lt;/p&gt;\r\n                                 </PrismCode>\r\n                              </td>\r\n                           </tr>\r\n                           <tr>\r\n                              <td>\r\n                                 <p className=\"text-warning\">\r\n                                    Fusce dapibus, tellus ac cursus commodo,\r\n                                    tortor mauris nibh.\r\n                                 </p>\r\n                              </td>\r\n                              <td>\r\n                                 <code>.text-warning</code>\r\n                              </td>\r\n                              <td>\r\n                                 <PrismCode\r\n                                    component=\"pre\"\r\n                                    className=\"language-markup\"\r\n                                 >\r\n                                    &lt;p className=\"text-warning\"&gt;Your\r\n                                    Text.&lt;/p&gt;\r\n                                 </PrismCode>\r\n                              </td>\r\n                           </tr>\r\n                           <tr>\r\n                              <td>\r\n                                 <p className=\"text-danger\">\r\n                                    Donec ullamcorper nulla non metus auctor\r\n                                    fringilla.\r\n                                 </p>\r\n                              </td>\r\n                              <td>\r\n                                 <code>.text-danger</code>\r\n                              </td>\r\n                              <td>\r\n                                 <PrismCode\r\n                                    component=\"pre\"\r\n                                    className=\"language-markup\"\r\n                                 >\r\n                                    &lt;p className=\"text-danger\"&gt;Your\r\n                                    Text.&lt;/p&gt;\r\n                                 </PrismCode>\r\n                              </td>\r\n                           </tr>\r\n                        </tbody>\r\n                     </Table>\r\n                     <CardBody>\r\n                        <p>\r\n                           APEX React Admin also provide custom\r\n                           <a href=\"link\" target=\"_blank\">\r\n                              color palette\r\n                           </a>\r\n                           for the text, below table show you usage.\r\n                        </p>\r\n                        <p>\r\n                           You can also use text lighten, darken and accent\r\n                           classes.\r\n                        </p>\r\n                        <ul>\r\n                           <li>\r\n                              <code>li.red .lighten-*</code> For lighten red\r\n                              text color, this two classes needed. Here *:\r\n                              1,2,3,4 for lighten red color options.\r\n                           </li>\r\n                           <li>\r\n                              <code>.red .darken-*</code> For darken red text\r\n                              color, this two classes needed. Here *: 1,2,3,4\r\n                              for darken red color options.\r\n                           </li>\r\n                           <li>\r\n                              <code>.red .accent-*</code> For accent red text\r\n                              color, this two classes needed. Here *: 1,2,3,4\r\n                              for accent red color options.\r\n                           </li>\r\n                        </ul>\r\n                     </CardBody>\r\n                     <Table responsive>\r\n                        <thead>\r\n                           <tr>\r\n                              <th>Example</th>\r\n                              <th>Classes</th>\r\n                              <th>Snippet</th>\r\n                           </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                           <tr>\r\n                              <td>\r\n                                 <p className=\"red\">\r\n                                    Fusce dapibus, tellus ac cursus commodo,\r\n                                    tortor mauris nibh.\r\n                                 </p>\r\n                              </td>\r\n                              <td>\r\n                                 <code>.red</code>\r\n                              </td>\r\n                              <td>\r\n                                 <PrismCode\r\n                                    component=\"pre\"\r\n                                    className=\"language-markup\"\r\n                                 >\r\n                                    &lt;p className=\"red\"&gt;Your\r\n                                    Text.&lt;/p&gt;\r\n                                 </PrismCode>\r\n                              </td>\r\n                           </tr>\r\n                           <tr>\r\n                              <td>\r\n                                 <p className=\"purple\">\r\n                                    Nullam id dolor id nibh ultricies vehicula\r\n                                    ut id elit.\r\n                                 </p>\r\n                              </td>\r\n                              <td>\r\n                                 <code>.purple</code>\r\n                              </td>\r\n                              <td>\r\n                                 <PrismCode\r\n                                    component=\"pre\"\r\n                                    className=\"language-markup\"\r\n                                 >\r\n                                    &lt;p className=\"purple\"&gt;Your\r\n                                    Text.&lt;/p&gt;\r\n                                 </PrismCode>\r\n                              </td>\r\n                           </tr>\r\n                           <tr>\r\n                              <td>\r\n                                 <p className=\"cyan\">\r\n                                    Duis mollis, est non commodo luctus, nisi\r\n                                    erat porttitor ligula.\r\n                                 </p>\r\n                              </td>\r\n                              <td>\r\n                                 <code>.cyan</code>\r\n                              </td>\r\n                              <td>\r\n                                 <PrismCode\r\n                                    component=\"pre\"\r\n                                    className=\"language-markup\"\r\n                                 >\r\n                                    &lt;p className=\"cyan\"&gt;Your\r\n                                    Text.&lt;/p&gt;\r\n                                 </PrismCode>\r\n                              </td>\r\n                           </tr>\r\n                           <tr>\r\n                              <td>\r\n                                 <p className=\"blue\">\r\n                                    Maecenas sed diam eget risus varius blandit\r\n                                    sit amet non magna.\r\n                                 </p>\r\n                              </td>\r\n                              <td>\r\n                                 <code>.blue</code>\r\n                              </td>\r\n                              <td>\r\n                                 <PrismCode\r\n                                    component=\"pre\"\r\n                                    className=\"language-markup\"\r\n                                 >\r\n                                    &lt;p className=\"blue\"&gt;Your\r\n                                    Text.&lt;/p&gt;\r\n                                 </PrismCode>\r\n                              </td>\r\n                           </tr>\r\n                           <tr>\r\n                              <td>\r\n                                 <p className=\"teal\">\r\n                                    Fusce dapibus, tellus ac cursus commodo,\r\n                                    tortor mauris nibh.\r\n                                 </p>\r\n                              </td>\r\n                              <td>\r\n                                 <code>.teal</code>\r\n                              </td>\r\n                              <td>\r\n                                 <PrismCode\r\n                                    component=\"pre\"\r\n                                    className=\"language-markup\"\r\n                                 >\r\n                                    &lt;p className=\"teal\"&gt;Your\r\n                                    Text.&lt;/p&gt;\r\n                                 </PrismCode>\r\n                              </td>\r\n                           </tr>\r\n                           <tr>\r\n                              <td>\r\n                                 <p className=\"blue-grey\">\r\n                                    Donec ullamcorper nulla non metus auctor\r\n                                    fringilla.\r\n                                 </p>\r\n                              </td>\r\n                              <td>\r\n                                 <code>.blue-grey</code>\r\n                              </td>\r\n                              <td>\r\n                                 <PrismCode\r\n                                    component=\"pre\"\r\n                                    className=\"language-markup\"\r\n                                 >\r\n                                    &lt;p className=\"blue-grey\"&gt;Your\r\n                                    Text.&lt;/p&gt;\r\n                                 </PrismCode>\r\n                              </td>\r\n                           </tr>\r\n                        </tbody>\r\n                     </Table>\r\n                  </Card>\r\n               </Col>\r\n            </Row>\r\n            {/* Contextual background */}\r\n            <Row>\r\n               <Col sm=\"12\">\r\n                  <Card>\r\n                     <CardBody>\r\n                        <CardTitle>Contextual background</CardTitle>\r\n                        <p>\r\n                           Contextual text color classes, easily set the\r\n                           background of an element to any contextual class.\r\n                           Anchor components will darken on hover, just like the\r\n                           text classes.\r\n                        </p>\r\n                     </CardBody>\r\n                     <Table responsive>\r\n                        <thead>\r\n                           <tr>\r\n                              <th>Example</th>\r\n                              <th>Classes</th>\r\n                              <th>Snippet</th>\r\n                           </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                           <tr>\r\n                              <td>\r\n                                 <span className=\"bg-primary text-highlight white\">\r\n                                    Nullam id dolor id nibh ultricies vehicula\r\n                                    ut id elit.\r\n                                 </span>\r\n                              </td>\r\n                              <td>\r\n                                 <code>.bg-primary</code>\r\n                              </td>\r\n                              <td>\r\n                                 <pre className=\"language-markup\">\r\n                                    <code>\r\n                                       &lt;p className=\"bg-primary\"&gt;Your\r\n                                       Text.&lt;/p&gt;\r\n                                    </code>\r\n                                 </pre>\r\n                              </td>\r\n                           </tr>\r\n                           <tr>\r\n                              <td>\r\n                                 <span className=\"bg-success text-highlight white\">\r\n                                    Duis mollis, est non commodo luctus, nisi\r\n                                    erat porttitor ligula.\r\n                                 </span>\r\n                              </td>\r\n                              <td>\r\n                                 <code>.bg-success</code>\r\n                              </td>\r\n                              <td>\r\n                                 <pre className=\"language-markup\">\r\n                                    <code>\r\n                                       &lt;p className=\"bg-success\"&gt;Your\r\n                                       Text.&lt;/p&gt;\r\n                                    </code>\r\n                                 </pre>\r\n                              </td>\r\n                           </tr>\r\n                           <tr>\r\n                              <td>\r\n                                 <span className=\"bg-info text-highlight white\">\r\n                                    Maecenas sed diam eget risus varius blandit\r\n                                    sit amet non magna.\r\n                                 </span>\r\n                              </td>\r\n                              <td>\r\n                                 <code>.bg-info</code>\r\n                              </td>\r\n                              <td>\r\n                                 <pre className=\"language-markup\">\r\n                                    <code>\r\n                                       &lt;p className=\"bg-info\"&gt;Your\r\n                                       Text.&lt;/p&gt;\r\n                                    </code>\r\n                                 </pre>\r\n                              </td>\r\n                           </tr>\r\n                           <tr>\r\n                              <td>\r\n                                 <span className=\"bg-warning text-highlight white\">\r\n                                    Fusce dapibus, tellus ac cursus commodo,\r\n                                    tortor mauris nibh.\r\n                                 </span>\r\n                              </td>\r\n                              <td>\r\n                                 <code>.bg-warning</code>\r\n                              </td>\r\n                              <td>\r\n                                 <pre className=\"language-markup\">\r\n                                    <code>\r\n                                       &lt;p className=\"bg-warning\"&gt;Your\r\n                                       Text.&lt;/p&gt;\r\n                                    </code>\r\n                                 </pre>\r\n                              </td>\r\n                           </tr>\r\n                           <tr>\r\n                              <td>\r\n                                 <span className=\"bg-danger text-highlight white\">\r\n                                    Donec ullamcorper nulla non metus auctor\r\n                                    fringilla.\r\n                                 </span>\r\n                              </td>\r\n                              <td>\r\n                                 <code>.bg-danger</code>\r\n                              </td>\r\n                              <td>\r\n                                 <pre className=\"language-markup\">\r\n                                    <code>\r\n                                       &lt;p className=\"bg-danger\"&gt;Your\r\n                                       Text.&lt;/p&gt;\r\n                                    </code>\r\n                                 </pre>\r\n                              </td>\r\n                           </tr>\r\n                           <tr>\r\n                              <td>\r\n                                 <span className=\"bg-dark text-highlight white\">\r\n                                    Fusce dapibus, tellus ac cursus commodo,\r\n                                    tortor mauris nibh.\r\n                                 </span>\r\n                              </td>\r\n                              <td>\r\n                                 <code>.bg-dark</code>\r\n                              </td>\r\n                              <td>\r\n                                 <pre className=\"language-markup\">\r\n                                    <code>\r\n                                       &lt;p className=\"bg-dark\"&gt;Your\r\n                                       Text.&lt;/p&gt;\r\n                                    </code>\r\n                                 </pre>\r\n                              </td>\r\n                           </tr>\r\n                        </tbody>\r\n                     </Table>\r\n                     <CardBody>\r\n                        <p>\r\n                           APEX Admin also provide custom{\" \"}\r\n                           <a href=\"link\" target=\"_blank\">\r\n                              color palette\r\n                           </a>{\" \"}\r\n                           for the background colors, below table show you\r\n                           usage.\r\n                        </p>\r\n                        <p>\r\n                           You can also use background lighten, darken and\r\n                           accent classes.\r\n                        </p>\r\n                        <ul>\r\n                           <li>\r\n                              <code>.bg-red .bg-lighten-*</code> For lighten red\r\n                              text color, this two classes needed. Here *:\r\n                              1,2,3,4 for lighten red color options.\r\n                           </li>\r\n                           <li>\r\n                              <code>.bg-red .bg-darken-*</code> For darken red\r\n                              text color, this two classes needed. Here *:\r\n                              1,2,3,4 for darken red color options.\r\n                           </li>\r\n                           <li>\r\n                              <code>.bg-red .bg-accent-*</code> For accent red\r\n                              text color, this two classes needed. Here *:\r\n                              1,2,3,4 for accent red color options.\r\n                           </li>\r\n                        </ul>\r\n                     </CardBody>\r\n                     <Table responsive>\r\n                        <thead>\r\n                           <tr>\r\n                              <th>Example</th>\r\n                              <th>Classes</th>\r\n                              <th>Snippet</th>\r\n                           </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                           <tr>\r\n                              <td>\r\n                                 <span className=\"bg-red bg-dark text-highlight white\">\r\n                                    {\" \"}\r\n                                    Fusce dapibus, tellus ac cursus commodo.\r\n                                 </span>\r\n                              </td>\r\n                              <td>\r\n                                 <code>.bg-red</code>\r\n                              </td>\r\n                              <td>\r\n                                 <pre className=\"language-markup\">\r\n                                    <code>\r\n                                       &lt;p className=\"bg-red bg-dark\"&gt;Your\r\n                                       Text.&lt;/p&gt;\r\n                                    </code>\r\n                                 </pre>\r\n                              </td>\r\n                           </tr>\r\n                           <tr>\r\n                              <td>\r\n                                 <span className=\"bg-purple bg-dark text-highlight white\">\r\n                                    {\" \"}\r\n                                    Nullam id dolor id nibh ultricies.\r\n                                 </span>\r\n                              </td>\r\n                              <td>\r\n                                 <code>.purple</code>\r\n                              </td>\r\n                              <td>\r\n                                 <pre className=\"language-markup\">\r\n                                    <code>\r\n                                       &lt;p className=\"bg-purple\r\n                                       bg-dark\"&gt;Your Text.&lt;/p&gt;\r\n                                    </code>\r\n                                 </pre>\r\n                              </td>\r\n                           </tr>\r\n                           <tr>\r\n                              <td>\r\n                                 <span className=\"bg-cyan bg-dark text-highlight white\">\r\n                                    {\" \"}\r\n                                    Duis mollis, est non commodo luctus, nisi\r\n                                    erat.\r\n                                 </span>\r\n                              </td>\r\n                              <td>\r\n                                 <code>.bg-cyan</code>\r\n                              </td>\r\n                              <td>\r\n                                 <pre className=\"language-markup\">\r\n                                    <code>\r\n                                       &lt;p className=\"bg-cyan bg-dark\"&gt;Your\r\n                                       Text.&lt;/p&gt;\r\n                                    </code>\r\n                                 </pre>\r\n                              </td>\r\n                           </tr>\r\n                           <tr>\r\n                              <td>\r\n                                 <span className=\"bg-blue bg-dark text-highlight white\">\r\n                                    {\" \"}\r\n                                    Maecenas sed diam eget risus varius blandit\r\n                                    sit.\r\n                                 </span>\r\n                              </td>\r\n                              <td>\r\n                                 <code>.bg-blue</code>\r\n                              </td>\r\n                              <td>\r\n                                 <pre className=\"language-markup\">\r\n                                    <code>\r\n                                       &lt;p className=\"bg-blue bg-dark\"&gt;Your\r\n                                       Text.&lt;/p&gt;\r\n                                    </code>\r\n                                 </pre>\r\n                              </td>\r\n                           </tr>\r\n                           <tr>\r\n                              <td>\r\n                                 <span className=\"bg-teal bg-dark text-highlight white\">\r\n                                    {\" \"}\r\n                                    Fusce dapibus, tellus ac cursus commodo.\r\n                                 </span>\r\n                              </td>\r\n                              <td>\r\n                                 <code>.bg-teal</code>\r\n                              </td>\r\n                              <td>\r\n                                 <pre className=\"language-markup\">\r\n                                    <code>\r\n                                       &lt;p className=\"bg-teal bg-dark\"&gt;Your\r\n                                       Text.&lt;/p&gt;\r\n                                    </code>\r\n                                 </pre>\r\n                              </td>\r\n                           </tr>\r\n                           <tr>\r\n                              <td>\r\n                                 <span className=\"bg-blue-grey bg-dark text-highlight white\">\r\n                                    {\" \"}\r\n                                    Donec ullamcorper nulla non metus.\r\n                                 </span>\r\n                              </td>\r\n                              <td>\r\n                                 <code>.blue-grey</code>\r\n                              </td>\r\n                              <td>\r\n                                 <pre className=\"language-markup\">\r\n                                    <code>\r\n                                       &lt;p className=\"blue-grey\r\n                                       bg-dark\"&gt;Your Text.&lt;/p&gt;\r\n                                    </code>\r\n                                 </pre>\r\n                              </td>\r\n                           </tr>\r\n                        </tbody>\r\n                     </Table>\r\n                  </Card>\r\n               </Col>\r\n            </Row>\r\n            {/* Text alignment */}\r\n            <Row>\r\n               <Col sm=\"12\">\r\n                  <Card>\r\n                     <CardBody>\r\n                        <CardTitle>Text alignment</CardTitle>\r\n                        <p>\r\n                           Easily realign text to components with text alignment\r\n                           classes.\r\n                        </p>\r\n                     </CardBody>\r\n                     <Table responsive>\r\n                        <thead>\r\n                           <tr>\r\n                              <th>Example</th>\r\n                              <th>Classes</th>\r\n                              <th>Snippet</th>\r\n                           </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                           <tr>\r\n                              <td>\r\n                                 <p className=\"text-justify\">\r\n                                    Lorem Ipsum is simply dummy text of the\r\n                                    printing and typesetting industry. Lorem\r\n                                    Ipsum has been the industry's standard dummy\r\n                                    text ever since the 1500s.\r\n                                 </p>\r\n                              </td>\r\n                              <td>\r\n                                 <code>.text-justify</code>\r\n                              </td>\r\n                              <td>\r\n                                 <pre className=\"language-markup\">\r\n                                    <code>\r\n                                       &lt;p\r\n                                       className=\"text-justify\"&gt;Justified\r\n                                       text.&lt;/p&gt;\r\n                                    </code>\r\n                                 </pre>\r\n                              </td>\r\n                           </tr>\r\n                           <tr>\r\n                              <td>\r\n                                 <p className=\"text-nowrap\">\r\n                                    It is a long established fact that a reader.\r\n                                 </p>\r\n                              </td>\r\n                              <td>\r\n                                 <code>.text-nowrap</code>\r\n                              </td>\r\n                              <td>\r\n                                 <pre className=\"language-markup\">\r\n                                    <code className=\"language-markup\">\r\n                                       &lt;p className=\"text-nowrap\"&gt;No wrap\r\n                                       text.&lt;/p&gt;\r\n                                    </code>\r\n                                 </pre>\r\n                              </td>\r\n                           </tr>\r\n                        </tbody>\r\n                     </Table>\r\n                  </Card>\r\n               </Col>\r\n            </Row>\r\n            {/* Text transform */}\r\n            <Row>\r\n               <Col sm=\"12\">\r\n                  <Card>\r\n                     <CardBody>\r\n                        <CardTitle>Text transform</CardTitle>\r\n                        <p>\r\n                           Transform text in components with text capitalization\r\n                           classes.\r\n                        </p>\r\n                        <p>\r\n                           Note how{\" \"}\r\n                           <code className=\"highlighter-rouge\">\r\n                              text-capitalize\r\n                           </code>{\" \"}\r\n                           only changes the first letter of each word, leaving\r\n                           the case of any other letters unaffected.\r\n                        </p>\r\n                     </CardBody>\r\n                     <Table responsive>\r\n                        <thead>\r\n                           <tr>\r\n                              <th>Example</th>\r\n                              <th>Classes</th>\r\n                              <th>Snippet</th>\r\n                           </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                           <tr>\r\n                              <td>\r\n                                 <p className=\"text-lowercase\">\r\n                                    Lowercased text.\r\n                                 </p>\r\n                              </td>\r\n                              <td>\r\n                                 <code>.text-lowercase</code>\r\n                              </td>\r\n                              <td>\r\n                                 <pre className=\"language-markup\">\r\n                                    <code>\r\n                                       &lt;p\r\n                                       className=\"text-lowercase\"&gt;Lowercased\r\n                                       text.&lt;/p&gt;\r\n                                    </code>\r\n                                 </pre>\r\n                              </td>\r\n                           </tr>\r\n                           <tr>\r\n                              <td>\r\n                                 <p className=\"text-uppercase\">\r\n                                    Uppercased text.\r\n                                 </p>\r\n                              </td>\r\n                              <td>\r\n                                 <code>.text-uppercase</code>\r\n                              </td>\r\n                              <td>\r\n                                 <pre className=\"language-markup\">\r\n                                    <code className=\"language-markup\">\r\n                                       &lt;p\r\n                                       className=\"text-uppercase\"&gt;Uppercased\r\n                                       text.&lt;/p&gt;\r\n                                    </code>\r\n                                 </pre>\r\n                              </td>\r\n                           </tr>\r\n                           <tr>\r\n                              <td>\r\n                                 <p className=\"text-capitalize\">\r\n                                    CapiTaliZed text.\r\n                                 </p>\r\n                              </td>\r\n                              <td>\r\n                                 <code>.text-capitalize</code>\r\n                              </td>\r\n                              <td>\r\n                                 <pre className=\"language-markup\">\r\n                                    <code className=\"language-markup\">\r\n                                       &lt;p\r\n                                       className=\"text-capitalize\"&gt;CapiTaliZed\r\n                                       text.&lt;/p&gt;\r\n                                    </code>\r\n                                 </pre>\r\n                              </td>\r\n                           </tr>\r\n                        </tbody>\r\n                     </Table>\r\n                  </Card>\r\n               </Col>\r\n            </Row>\r\n            {/* Text Option */}\r\n            <Row>\r\n               <Col sm=\"12\">\r\n                  <Card>\r\n                     <CardBody>\r\n                        <CardTitle>Text Option</CardTitle>\r\n                        <p>\r\n                           APEX Admin provide font large & small sizes variant\r\n                           classes to change font size.\r\n                        </p>\r\n                        <p>\r\n                           Note how{\" \"}\r\n                           <code className=\"highlighter-rouge\">\r\n                              text-capitalize\r\n                           </code>{\" \"}\r\n                           only changes the first letter of each word, leaving\r\n                           the case of any other letters unaffected.\r\n                        </p>\r\n                     </CardBody>\r\n                     <Table responsive>\r\n                        <thead>\r\n                           <tr>\r\n                              <th>Example</th>\r\n                              <th>Classes</th>\r\n                              <th>Snippet</th>\r\n                           </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                           <tr>\r\n                              <td>\r\n                                 <p className=\"font-large-3\">Large lg text size.</p>\r\n                              </td>\r\n                              <td>\r\n                                 <code>.font-large-3</code>\r\n                              </td>\r\n                              <td>\r\n                                 <pre className=\"language-markup\">\r\n                                    <code>\r\n                                       &lt;p className=\"font-large-3\" &gt;Large lg\r\n                                       text size.&lt;/p&gt;\r\n                                    </code>\r\n                                 </pre>\r\n                              </td>\r\n                           </tr>\r\n                           <tr>\r\n                              <td>\r\n                                 <p className=\"font-large-2\">Large lg text size.</p>\r\n                              </td>\r\n                              <td>\r\n                                 <code>.font-large-2</code>\r\n                              </td>\r\n                              <td>\r\n                                 <pre className=\"language-markup\">\r\n                                    <code>\r\n                                       &lt;p className=\"font-large-2\" &gt;Large lg\r\n                                       text size.&lt;/p&gt;\r\n                                    </code>\r\n                                 </pre>\r\n                              </td>\r\n                           </tr>\r\n                           <tr>\r\n                              <td>\r\n                                 <p className=\"font-large-1\">Large lg text size.</p>\r\n                              </td>\r\n                              <td>\r\n                                 <code>.font-large-1</code>\r\n                              </td>\r\n                              <td>\r\n                                 <pre className=\"language-markup\">\r\n                                    <code>\r\n                                       &lt;p className=\"font-large-1\" &gt;Large lg\r\n                                       text size.&lt;/p&gt;\r\n                                    </code>\r\n                                 </pre>\r\n                              </td>\r\n                           </tr>\r\n                           <tr>\r\n                              <td>\r\n                                 <p className=\"font-medium-3\">\r\n                                    Large md text size.\r\n                                 </p>\r\n                              </td>\r\n                              <td>\r\n                                 <code>.font-medium-3</code>\r\n                              </td>\r\n                              <td>\r\n                                 <pre className=\"language-markup\">\r\n                                    <code>\r\n                                       &lt;p className=\"font-medium-3\" &gt;Large md\r\n                                       text size.&lt;/p&gt;\r\n                                    </code>\r\n                                 </pre>\r\n                              </td>\r\n                           </tr>\r\n                           <tr>\r\n                              <td>\r\n                                 <p className=\"font-medium-2\">\r\n                                    Large md text size.\r\n                                 </p>\r\n                              </td>\r\n                              <td>\r\n                                 <code>.font-medium-2</code>\r\n                              </td>\r\n                              <td>\r\n                                 <pre className=\"language-markup\">\r\n                                    <code>\r\n                                       &lt;p className=\"font-medium-2\" &gt;Large md\r\n                                       text size.&lt;/p&gt;\r\n                                    </code>\r\n                                 </pre>\r\n                              </td>\r\n                           </tr>\r\n                           <tr>\r\n                              <td>\r\n                                 <p className=\"font-medium-1\">\r\n                                    Large sm text size.\r\n                                 </p>\r\n                              </td>\r\n                              <td>\r\n                                 <code>.font-medium-1</code>\r\n                              </td>\r\n                              <td>\r\n                                 <pre className=\"language-markup\">\r\n                                    <code>\r\n                                       &lt;p className=\"font-medium-1\" &gt;Large sm\r\n                                       text size.&lt;/p&gt;\r\n                                    </code>\r\n                                 </pre>\r\n                              </td>\r\n                           </tr>\r\n                           <tr>\r\n                              <td>\r\n                                 <p>Normal base text size.</p>\r\n                              </td>\r\n                              <td>N/A</td>\r\n                              <td>\r\n                                 <pre className=\"language-markup\">\r\n                                    <code>\r\n                                       &lt;p&gt;Normal base text size.&lt;/p&gt;\r\n                                    </code>\r\n                                 </pre>\r\n                              </td>\r\n                           </tr>\r\n                           <tr>\r\n                              <td>\r\n                                 <p className=\"font-small-3\">Small lg text size.</p>\r\n                              </td>\r\n                              <td>\r\n                                 <code>.font-small-3</code>\r\n                              </td>\r\n                              <td>\r\n                                 <pre className=\"language-markup\">\r\n                                    <code>\r\n                                       &lt;p className=\"font-small-3\" &gt;Small lg\r\n                                       text size.&lt;/p&gt;\r\n                                    </code>\r\n                                 </pre>\r\n                              </td>\r\n                           </tr>\r\n                           <tr>\r\n                              <td>\r\n                                 <p className=\"font-small-2\">Small md text size.</p>\r\n                              </td>\r\n                              <td>\r\n                                 <code>.font-small-2</code>\r\n                              </td>\r\n                              <td>\r\n                                 <pre className=\"language-markup\">\r\n                                    <code>\r\n                                       &lt;p className=\"font-small-2\" &gt;Small md\r\n                                       text size.&lt;/p&gt;\r\n                                    </code>\r\n                                 </pre>\r\n                              </td>\r\n                           </tr>\r\n                           <tr>\r\n                              <td>\r\n                                 <p className=\"font-small-1\">Small sm text size.</p>\r\n                              </td>\r\n                              <td>\r\n                                 <code>.font-small-1</code>\r\n                              </td>\r\n                              <td>\r\n                                 <pre className=\"language-markup\">\r\n                                    <code>\r\n                                       &lt;p className=\"font-small-1\" &gt;Small sm\r\n                                       text size.&lt;/p&gt;\r\n                                    </code>\r\n                                 </pre>\r\n                              </td>\r\n                           </tr>\r\n                        </tbody>\r\n                     </Table>\r\n\r\n                     <CardBody>\r\n                        <CardTitle>Text Option</CardTitle>\r\n                        <p>\r\n                           APEX Admin provide font large & small sizes variant\r\n                           classes to change font size.\r\n                        </p>\r\n                        <p>\r\n                           Note how{\" \"}\r\n                           <code className=\"highlighter-rouge\">\r\n                              text-capitalize\r\n                           </code>{\" \"}\r\n                           only changes the first letter of each word, leaving\r\n                           the case of any other letters unaffected.\r\n                        </p>\r\n                     </CardBody>\r\n\r\n                     <CardBody>\r\n                        <CardTitle>Font weight</CardTitle>\r\n                        <p>\r\n                           APEX Admin provide font weight class{\" \"}\r\n                           <code>\r\n                              .text-bold-\r\n                              [weight]\r\n                           </code>\r\n                           , where{\" \"}\r\n                           <code>[weight] value can be 100,200 ... 900.</code>\r\n                        </p>\r\n                     </CardBody>\r\n                     <Table responsive>\r\n                        <thead>\r\n                           <tr>\r\n                              <th>Example</th>\r\n                              <th>Classes</th>\r\n                              <th>Snippet</th>\r\n                           </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                           <tr>\r\n                              <td>\r\n                                 <p className=\"text-bold-300\">Font weight 300</p>\r\n                              </td>\r\n                              <td>\r\n                                 <code>.text-bold-300</code>\r\n                              </td>\r\n                              <td>\r\n                                 <pre className=\"language-markup\">\r\n                                    <code>\r\n                                       &lt;p className=\"text-bold-300\"&gt;Font\r\n                                       weight 300.&lt;/p&gt;\r\n                                    </code>\r\n                                 </pre>\r\n                              </td>\r\n                           </tr>\r\n                           <tr>\r\n                              <td>\r\n                                 <p className=\"text-bold-400\">Font weight 400</p>\r\n                              </td>\r\n                              <td>\r\n                                 <code>.text-bold-400</code>\r\n                              </td>\r\n                              <td>\r\n                                 <pre className=\"language-markup\">\r\n                                    <code>\r\n                                       &lt;p className=\"text-bold-400\"&gt;Font\r\n                                       weight 400.&lt;/p&gt;\r\n                                    </code>\r\n                                 </pre>\r\n                              </td>\r\n                           </tr>\r\n                           <tr>\r\n                              <td>\r\n                                 <p className=\"text-bold-600\">Font weight 600</p>\r\n                              </td>\r\n                              <td>\r\n                                 <code>.text-bold-600</code>\r\n                              </td>\r\n                              <td>\r\n                                 <pre className=\"language-markup\">\r\n                                    <code>\r\n                                       &lt;p className=\"text-bold-600\"&gt;Font\r\n                                       weight 600.&lt;/p&gt;\r\n                                    </code>\r\n                                 </pre>\r\n                              </td>\r\n                           </tr>\r\n                           <tr>\r\n                              <td>\r\n                                 <p className=\"text-bold-700\">Font weight 700</p>\r\n                              </td>\r\n                              <td>\r\n                                 <code>.text-bold-700</code>\r\n                              </td>\r\n                              <td>\r\n                                 <pre className=\"language-markup\">\r\n                                    <code>\r\n                                       &lt;p className=\"text-bold-700\"&gt;Font\r\n                                       weight 700.&lt;/p&gt;\r\n                                    </code>\r\n                                 </pre>\r\n                              </td>\r\n                           </tr>\r\n                        </tbody>\r\n                     </Table>\r\n\r\n                     <CardBody>\r\n                        <CardTitle>Inline text elements</CardTitle>\r\n                        <p>Styling for common inline HTML5 elements.</p>\r\n                        <p>\r\n                           <code className=\"highlighter-rouge\">.mark</code> and{\" \"}\r\n                           <code className=\"highlighter-rouge\">.small</code> classes\r\n                           are also available to apply the same styles as{\" \"}\r\n                           <code className=\"highlighter-rouge\">&lt;mark&gt;</code>{\" \"}\r\n                           and{\" \"}\r\n                           <code className=\"highlighter-rouge\">&lt;small&gt;</code>{\" \"}\r\n                           while avoiding any unwanted semantic implications\r\n                           that the tags would bring.\r\n                        </p>\r\n                     </CardBody>\r\n                     <Table responsive>\r\n                        <thead>\r\n                           <tr>\r\n                              <th>Example</th>\r\n                              <th>Snippet</th>\r\n                           </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                           <tr>\r\n                              <td>\r\n                                 <p>\r\n                                    You can use the mark tag to\r\n                                    <mark>highlight</mark> text.\r\n                                 </p>\r\n                              </td>\r\n                              <td>\r\n                                 <pre className=\"language-markup\">\r\n                                    <code>\r\n                                       &lt;p&gt;You can use the mark tag to\r\n                                       &lt;mark&gt;highlight&lt;/mark&gt;\r\n                                       text.&lt;/p&gt;\r\n                                    </code>\r\n                                 </pre>\r\n                              </td>\r\n                           </tr>\r\n                           <tr>\r\n                              <td>\r\n                                 <p>\r\n                                    <del>\r\n                                       This line of text is meant to be treated\r\n                                       as deleted text.\r\n                                    </del>\r\n                                 </p>\r\n                              </td>\r\n                              <td>\r\n                                 <pre className=\"language-markup\">\r\n                                    <code>\r\n                                       &lt;p&gt;&lt;del&gt;This line of text is\r\n                                       meant to be treated as deleted\r\n                                       text.&lt;/del&gt;&lt;/p&gt;\r\n                                    </code>\r\n                                 </pre>\r\n                              </td>\r\n                           </tr>\r\n                           <tr>\r\n                              <td>\r\n                                 <p>\r\n                                    <s>\r\n                                       This line of text is meant to be treated\r\n                                       as no longer accurate.\r\n                                    </s>\r\n                                 </p>\r\n                              </td>\r\n                              <td>\r\n                                 <pre className=\"language-markup\">\r\n                                    <code>\r\n                                       &lt;p&gt;&lt;s&gt;This line of text is\r\n                                       meant to be treated as no longer\r\n                                       accurate.&lt;/s&gt;&lt;/p&gt;\r\n                                    </code>\r\n                                 </pre>\r\n                              </td>\r\n                           </tr>\r\n                           <tr>\r\n                              <td>\r\n                                 <p>\r\n                                    This line of text\r\n                                    <ins>\r\n                                       is meant to be treated as an addition to\r\n                                       the document.\r\n                                    </ins>\r\n                                 </p>\r\n                              </td>\r\n                              <td>\r\n                                 <pre className=\"language-markup\">\r\n                                    <code>\r\n                                       &lt;p&gt;&lt;ins&gt;This line of text is\r\n                                       meant to be treated as an addition to the\r\n                                       document.&lt;/ins&gt;&lt;/p&gt;\r\n                                    </code>\r\n                                 </pre>\r\n                              </td>\r\n                           </tr>\r\n                           <tr>\r\n                              <td>\r\n                                 <p>\r\n                                    <u>\r\n                                       This line of text will render as\r\n                                       underlined\r\n                                    </u>\r\n                                 </p>\r\n                              </td>\r\n                              <td>\r\n                                 <pre className=\"language-markup\">\r\n                                    <code>\r\n                                       &lt;p&gt;&lt;u&gt;This line of text will\r\n                                       render as underlined.&lt;/u&gt;&lt;/p&gt;\r\n                                    </code>\r\n                                 </pre>\r\n                              </td>\r\n                           </tr>\r\n                           <tr>\r\n                              <td>\r\n                                 <p>\r\n                                    <small>\r\n                                       This line of text is meant to be treated\r\n                                       as fine print.\r\n                                    </small>\r\n                                 </p>\r\n                              </td>\r\n                              <td>\r\n                                 <pre className=\"language-markup\">\r\n                                    <code>\r\n                                       &lt;p&gt;&lt;small&gt;This line of text\r\n                                       is meant to be treated as fine\r\n                                       print.&lt;/small&gt;&lt;/p&gt;\r\n                                    </code>\r\n                                 </pre>\r\n                              </td>\r\n                           </tr>\r\n                           <tr>\r\n                              <td>\r\n                                 <p>\r\n                                    <strong>\r\n                                       This line rendered as bold text.\r\n                                    </strong>\r\n                                 </p>\r\n                              </td>\r\n                              <td>\r\n                                 <pre className=\"language-markup\">\r\n                                    <code>\r\n                                       &lt;p&gt;&lt;strong&gt;This line rendered\r\n                                       as bold text.&lt;/strong&gt;&lt;/p&gt;\r\n                                    </code>\r\n                                 </pre>\r\n                              </td>\r\n                           </tr>\r\n                           <tr>\r\n                              <td>\r\n                                 <p>\r\n                                    <em>\r\n                                       This line rendered as italicized text.\r\n                                    </em>\r\n                                 </p>\r\n                              </td>\r\n                              <td>\r\n                                 <pre className=\"language-markup\">\r\n                                    <code>\r\n                                       &lt;p&gt;&lt;em&gt;This line rendered as\r\n                                       italicized text.&lt;/em&gt;&lt;/p&gt;\r\n                                    </code>\r\n                                 </pre>\r\n                              </td>\r\n                           </tr>\r\n                           <tr>\r\n                              <td>\r\n                                 <p>\r\n                                    Sample\r\n                                    <abbr\r\n                                       title=\"\"\r\n                                       data-popup=\"tooltip\"\r\n                                       data-original-title=\"Abbr title\"\r\n                                    >\r\n                                       abbreviation\r\n                                    </abbr>\r\n                                 </p>\r\n                              </td>\r\n                              <td>\r\n                                 <pre className=\"language-markup\">\r\n                                    <code>\r\n                                       &lt;p&gt; Sample\r\n                                       &lt;abbr&gt;Abbreviations.&lt;/abbr&gt;&lt;/p&gt;\r\n                                    </code>\r\n                                 </pre>\r\n                              </td>\r\n                           </tr>\r\n                           <tr>\r\n                              <td>\r\n                                 <p>\r\n                                    Sample\r\n                                    <abbr\r\n                                       title=\"HyperText Markup Language\"\r\n                                       className=\"initialism\"\r\n                                    >\r\n                                       HTML\r\n                                    </abbr>{\" \"}\r\n                                    title.\r\n                                 </p>\r\n                              </td>\r\n                              <td>\r\n                                 <pre className=\"language-markup\">\r\n                                    <code>\r\n                                       &lt;p&gt; Sample &lt;abbr\r\n                                       title=\"HyperText Markup Language\"\r\n                                       className=\"initialism\"&gt;HTML.&lt;/abbr&gt;&lt;/p&gt;\r\n                                    </code>\r\n                                 </pre>\r\n                              </td>\r\n                           </tr>\r\n                           <tr>\r\n                              <td>\r\n                                 <var>y</var> =<var>m</var>\r\n                                 <var>x</var> +<var>b</var>\r\n                              </td>\r\n                              <td>\r\n                                 <pre className=\"language-markup\">\r\n                                    <code>\r\n                                       &lt;p&gt; For indicating variables use\r\n                                       the &lt;var&gt; tag.&lt;/p&gt;\r\n                                    </code>\r\n                                 </pre>\r\n                              </td>\r\n                           </tr>\r\n                           <tr>\r\n                              <td>\r\n                                 <p>\r\n                                    Edit settings, press\r\n                                    <kbd>\r\n                                       <kbd>ctrl</kbd> +<kbd>,</kbd>\r\n                                    </kbd>\r\n                                 </p>\r\n                              </td>\r\n                              <td>\r\n                                 <pre className=\"language-markup\">\r\n                                    <code>\r\n                                       &lt;p&gt; Use the &lt;kbd&gt; to indicate\r\n                                       input that is typically entered via\r\n                                       keyboard.&lt;/p&gt;\r\n                                    </code>\r\n                                 </pre>\r\n                              </td>\r\n                           </tr>\r\n                           <tr>\r\n                              <td>\r\n                                 <samp>\r\n                                    This text is meant to be treated as sample\r\n                                    output from a computer program.\r\n                                 </samp>\r\n                              </td>\r\n                              <td>\r\n                                 <pre className=\"language-markup\">\r\n                                    <code>\r\n                                       &lt;p&gt; For indicating sample output\r\n                                       from a program use the &lt;samp&gt; tag.\r\n                                       &lt;/p&gt;\r\n                                    </code>\r\n                                 </pre>\r\n                              </td>\r\n                           </tr>\r\n                           <tr>\r\n                              <td>\r\n                                 <code>Inline code snippet</code>\r\n                              </td>\r\n                              <td>\r\n                                 <pre className=\"language-markup\">\r\n                                    <code>\r\n                                       &lt;p&gt; Wrap inline snippets of code\r\n                                       with &lt;code&gt; tag. &lt;/p&gt;\r\n                                    </code>\r\n                                 </pre>\r\n                              </td>\r\n                           </tr>\r\n                        </tbody>\r\n                     </Table>\r\n                  </Card>\r\n               </Col>\r\n            </Row>\r\n         </Fragment>\r\n      );\r\n   }\r\n}\r\n\r\nexport default TextUtility;\r\n"]},"metadata":{},"sourceType":"module"}