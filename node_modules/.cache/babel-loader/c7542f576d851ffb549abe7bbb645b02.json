{"ast":null,"code":"import _toConsumableArray from \"C:\\\\xampp\\\\htdocs\\\\api_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"C:\\\\xampp\\\\htdocs\\\\api_react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport { HANDLE_FILTER_USER, HANDLE_SELECT_USER, HANDLE_SEND_MESSAGE } from \"../actions/types/types\"; // import { chatUser } from \"../../views/chat/chatData\";\n\nimport { chatData } from \"./chat/chatData\";\nvar initState = {\n  users: chatUser,\n  searchTerm: \"\",\n  currentUser: chatUser[0],\n  randomThumb: \"https://randomuser.me/api/portraits/thumb/men/30.jpg\"\n};\n\nvar chatReducer = function chatReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case HANDLE_FILTER_USER:\n      var searchTerm = action.payload;\n      return _objectSpread({}, initState, {\n        users: chatUser.filter(function (user) {\n          return user.name.toLocaleLowerCase().includes(searchTerm.toLocaleLowerCase());\n        })\n      });\n\n    case HANDLE_SELECT_USER:\n      var _action$payload = action.payload,\n          users = _action$payload.users,\n          id = _action$payload.id;\n      return _objectSpread({}, initState, {\n        currentUser: users.find(function (user) {\n          return user.id === id;\n        })\n      });\n\n    case HANDLE_SEND_MESSAGE:\n      var _action$payload2 = action.payload,\n          chatMsg = _action$payload2.chatMsg,\n          currentUser = _action$payload2.currentUser,\n          Users = _action$payload2.Users;\n      return _objectSpread({}, initState, {\n        users: Users.map(function (usr) {\n          if (usr.id === currentUser.id) {\n            return _objectSpread({}, currentUser, {\n              msgs: [].concat(_toConsumableArray(currentUser.msgs), [chatMsg])\n            });\n          } else {\n            return usr;\n          }\n        })\n      });\n\n    default:\n      return initState;\n  }\n};\n\nexport default chatReducer;","map":{"version":3,"sources":["C:/xampp/htdocs/api_react/src/redux/reducers/chatReducer.js"],"names":["HANDLE_FILTER_USER","HANDLE_SELECT_USER","HANDLE_SEND_MESSAGE","chatData","initState","users","chatUser","searchTerm","currentUser","randomThumb","chatReducer","state","action","type","payload","filter","user","name","toLocaleLowerCase","includes","id","find","chatMsg","Users","map","usr","msgs"],"mappings":";;AAAA,SACGA,kBADH,EAEGC,kBAFH,EAGGC,mBAHH,QAIO,wBAJP,C,CAKA;;AACA,SAASC,QAAT,QAAyB,iBAAzB;AAGA,IAAMC,SAAS,GAAG;AACfC,EAAAA,KAAK,EAAEC,QADQ;AAEfC,EAAAA,UAAU,EAAE,EAFG;AAGfC,EAAAA,WAAW,EAAEF,QAAQ,CAAC,CAAD,CAHN;AAIfG,EAAAA,WAAW,EAAE;AAJE,CAAlB;;AAOA,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAA+B;AAAA,MAA9BC,KAA8B,uEAAtBP,SAAsB;AAAA,MAAXQ,MAAW;;AAChD,UAAQA,MAAM,CAACC,IAAf;AACG,SAAKb,kBAAL;AACG,UAAMO,UAAU,GAAGK,MAAM,CAACE,OAA1B;AACA,+BACMV,SADN;AAEGC,QAAAA,KAAK,EAAEC,QAAQ,CAACS,MAAT,CAAgB,UAAAC,IAAI;AAAA,iBACxBA,IAAI,CAACC,IAAL,CACIC,iBADJ,GAEIC,QAFJ,CAEaZ,UAAU,CAACW,iBAAX,EAFb,CADwB;AAAA,SAApB;AAFV;;AAQH,SAAKjB,kBAAL;AAAA,4BACyBW,MAAM,CAACE,OADhC;AAAA,UACWT,KADX,mBACWA,KADX;AAAA,UACkBe,EADlB,mBACkBA,EADlB;AAEG,+BACMhB,SADN;AAEGI,QAAAA,WAAW,EAAEH,KAAK,CAACgB,IAAN,CAAW,UAAAL,IAAI;AAAA,iBAAIA,IAAI,CAACI,EAAL,KAAYA,EAAhB;AAAA,SAAf;AAFhB;;AAKH,SAAKlB,mBAAL;AAAA,6BAC2CU,MAAM,CAACE,OADlD;AAAA,UACWQ,OADX,oBACWA,OADX;AAAA,UACoBd,WADpB,oBACoBA,WADpB;AAAA,UACiCe,KADjC,oBACiCA,KADjC;AAGG,+BACMnB,SADN;AAEGC,QAAAA,KAAK,EAAEkB,KAAK,CAACC,GAAN,CAAU,UAAAC,GAAG,EAAI;AACrB,cAAIA,GAAG,CAACL,EAAJ,KAAWZ,WAAW,CAACY,EAA3B,EAA+B;AAC5B,qCACMZ,WADN;AAEGkB,cAAAA,IAAI,+BAAMlB,WAAW,CAACkB,IAAlB,IAAwBJ,OAAxB;AAFP;AAIF,WALD,MAKO;AACJ,mBAAOG,GAAP;AACF;AACH,SATM;AAFV;;AAaH;AACG,aAAOrB,SAAP;AAnCN;AAqCF,CAtCD;;AAwCA,eAAeM,WAAf","sourcesContent":["import {\r\n   HANDLE_FILTER_USER,\r\n   HANDLE_SELECT_USER,\r\n   HANDLE_SEND_MESSAGE\r\n} from \"../actions/types/types\";\r\n// import { chatUser } from \"../../views/chat/chatData\";\r\nimport { chatData } from \"./chat/chatData\";\r\n\r\n\r\nconst initState = {\r\n   users: chatUser,\r\n   searchTerm: \"\",\r\n   currentUser: chatUser[0],\r\n   randomThumb: \"https://randomuser.me/api/portraits/thumb/men/30.jpg\"\r\n};\r\n\r\nconst chatReducer = (state = initState, action) => {\r\n   switch (action.type) {\r\n      case HANDLE_FILTER_USER:\r\n         const searchTerm = action.payload;\r\n         return {\r\n            ...initState,\r\n            users: chatUser.filter(user =>\r\n               user.name\r\n                  .toLocaleLowerCase()\r\n                  .includes(searchTerm.toLocaleLowerCase())\r\n            )\r\n         };\r\n      case HANDLE_SELECT_USER:\r\n         const { users, id } = action.payload;\r\n         return {\r\n            ...initState,\r\n            currentUser: users.find(user => user.id === id)\r\n         };\r\n\r\n      case HANDLE_SEND_MESSAGE:\r\n         const { chatMsg, currentUser, Users } = action.payload;\r\n\r\n         return {\r\n            ...initState,\r\n            users: Users.map(usr => {\r\n               if (usr.id === currentUser.id) {\r\n                  return {\r\n                     ...currentUser,\r\n                     msgs: [...currentUser.msgs, chatMsg]\r\n                  };\r\n               } else {\r\n                  return usr;\r\n               }\r\n            })\r\n         };\r\n      default:\r\n         return initState;\r\n   }\r\n};\r\n\r\nexport default chatReducer;\r\n"]},"metadata":{},"sourceType":"module"}